{"version":3,"sources":["Home.js","About.js","Contact.js","NavApp.js","Login.js","MeasurementPanel.js","UsersManagement.js","Server.js","NavAdmin.js","AdminMainPanel.js","EmployeePanel.js","TechnicianPanel.js","App.js","index.js"],"names":["Home","className","to","Button","variant","Component","About","Contact","NavApp","Navbar","expand","style","marginTop","Toggle","aria-controls","Collapse","id","Nav","marginRight","exact","activeStyle","borderBottom","Login","props","state","UserLogin","UserPassword","Message","bind","login","event","this","setState","target","value","preventDefault","fetch","method","headers","body","JSON","stringify","password","then","response","json","result","status","redirect","function","catch","err","console","log","error","push","Form","Group","Label","Control","onChange","type","placeholder","Text","onClick","MeasurementPanel","currentSensorName","currentSensor","currentTemperature","currentHumidity","numberOfAllMeasurement","numberOfMeasurmentToday","numberOfMeasurementThisMonth","sensors","chartTemperatureData","data","datasets","labels","chartHumidityData","optionsHumidityChart","animation","easing","duration","legend","fontColor","fontSize","scales","yAxes","display","gridLines","color","ticks","beginAtZero","max","min","xAxes","optionsTemperatureChart","fetchingLoopFunction","dataTemperature","dataHumidity","label","map","mes","toFixed","responsive","lineTension","borderCapStyle","backgroundColor","borderColor","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","hoverBackgroundColor","responseTemperature","responseHumidity","responseCurrent","responseSensors","responseNumberOfAllMeasurement","responseNumberOfMeasurementThisMonth","responseNumberOfMeasurementToday","dataCurrent","dataSensors","dataNumberOfAllMeasurement","dataNumberOfMeasurementThisMonth","dataNumberOfMeasurementToday","length","temperature","humidity","s","sensorName","setChartData","setInterval","Container","Row","Col","xs","key","options","width","height","UsersManagement","handleCreateShow","showCreateModal","handleCreateClose","handleShow","showModal","handleClose","responseText","users","userFunctions","editUserData","userFunctionId","userFunction","createUserData","Password","UserFunctionId","LoginNew","PasswordNew","UserFunctionIdNew","editUser","deleteUser","getUsers","createUser","getUserFunctions","header","Table","striped","bordered","hover","u","Modal","show","onHide","Header","Title","Body","disabled","defaultValue","Footer","Server","NavAdmin","AdminPanel","path","component","EmployeePanel","TechnicianPanel","App","AdminMainPanel","ReactDOM","render","document","getElementById"],"mappings":"qZAoBeA,G,oLAXX,OACI,yBAAKC,UAAU,iBACX,gHACA,kBAAC,IAAD,CAAMC,GAAG,8CACP,kBAACC,EAAA,EAAD,CAAQF,UAAU,MAAMG,QAAQ,QAAhC,iB,GAPKC,cCMJC,G,8KARX,OACI,yBAAKL,UAAU,cACf,olB,GAJYI,cCWLE,G,8KARX,OACI,yBAAKN,UAAU,gBACf,ggB,GAJcI,c,kBCsBPG,G,6KAjBP,OACQ,yBAAKP,UAAU,UACf,kBAACQ,EAAA,EAAD,CAAQC,OAAQ,KAAKN,QAAQ,OAAOO,MAAO,CAACC,UAAW,SACnD,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKhB,UAAU,UAAUU,MAAO,CAACO,YAAa,SAC1C,kBAAC,IAAD,CAASC,OAAK,EAACC,YAAa,CAAEC,aAAc,+BAAiCpB,UAAU,WAAWC,GAAI,yCAAtG,yBACA,kBAAC,IAAD,CAASkB,YAAa,CAAEC,aAAc,+BAAiCpB,UAAU,WAAWC,GAAG,8CAA/F,SACA,kBAAC,IAAD,CAASkB,YAAa,CAAEC,aAAc,+BAAiCpB,UAAU,WAAWC,GAAI,gDAAhG,mB,GAXPG,c,yBC6GNiB,G,yDA5Gb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,UAAW,GACXC,aAAc,GACdC,QAAS,IAGX,EAAKF,UAAY,EAAKA,UAAUG,KAAf,gBACjB,EAAKF,aAAe,EAAKA,aAAaE,KAAlB,gBACpB,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBAVG,E,sDAYNE,GACRC,KAAKC,SAAS,CACZP,UAAWK,EAAMG,OAAOC,U,mCAIfJ,GACXC,KAAKC,SAAS,CACZN,aAAcI,EAAMG,OAAOC,U,4BAI3BJ,GAAO,IAAD,OACVA,EAAMK,iBACN,IACEC,MAAM,yCAAyC,CAC/CC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAEnBZ,MAAOE,KAAKP,MAAMC,UAClBiB,SAAUX,KAAKP,MAAME,iBAGxBiB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACgB,UAAlBA,EAAOC,OACR,EAAKf,SAAS,CACZL,QAAS,4CAGa,YAAlBmB,EAAOC,OACb,EAAKf,SAAS,CAACgB,SAAUF,EAAOG,WAIhC,EAAKjB,SAAS,CACZL,QAAS,+CAIduB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAId,MAAMG,GACJF,QAAQC,IAAI,SACZtB,KAAKC,SAAS,CACZL,QAAS,+C,+BAMb,MAA4B,UAAxBI,KAAKP,MAAMwB,SACN,kBAAC,IAAD,CAAUO,MAAI,EAACrD,GAAG,qDAEC,eAAxB6B,KAAKP,MAAMwB,SACN,kBAAC,IAAD,CAAUO,MAAI,EAACrD,GAAG,yDAEC,aAAxB6B,KAAKP,MAAMwB,SACN,kBAAC,IAAD,CAAUO,MAAI,EAACrD,GAAG,uDAGvB,yBAAKD,UAAU,cACX,kBAACuD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYxD,UAAU,aACpB,kBAACuD,EAAA,EAAKE,MAAN,oBACA,kBAACF,EAAA,EAAKG,QAAN,CAAc1D,UAAU,WAAW2D,SAAU7B,KAAKN,UAAWoC,KAAK,OAAOC,YAAY,UACrF,kBAACN,EAAA,EAAKO,KAAN,CAAW9D,UAAU,cAClB8B,KAAKP,MAAMG,UAIhB,kBAAC6B,EAAA,EAAKC,MAAN,CAAYxD,UAAU,gBACpB,kBAACuD,EAAA,EAAKE,MAAN,yBACA,kBAACF,EAAA,EAAKG,QAAN,CAAc1D,UAAU,WAAW2D,SAAU7B,KAAKL,aAAcmC,KAAK,WAAWC,YAAY,WAM5F,kBAAC3D,EAAA,EAAD,CAASF,UAAU,eAAe+D,QAASjC,KAAKF,MAAOzB,QAAQ,WAA/D,iB,GAnGIC,c,mEC+SL4D,E,kDA9SX,WAAY1C,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACX0C,kBAAmB,sBACnBC,cAAe,IACfC,mBAAoB,GACpBC,gBAAiB,GACjBC,uBAAwB,GACxBC,wBAAyB,GACzBC,6BAA8B,GAC9BC,QAAS,GACTC,qBAAsB,CAACC,KAAM,CAACC,SAAU,GAAIC,OAAQ,KACpDC,kBAAmB,CAACH,KAAM,CAACC,SAAU,GAAIC,OAAQ,KACjDE,qBAAsB,CACpBC,UAAW,CACTC,OAAQ,eACRC,SAAU,KAEZC,OAAQ,CACNN,OAAQ,CACNO,UAAW,uBACXC,SAAU,KAGdC,OAAQ,CACNC,MAAO,CAAC,CACNC,SAAS,EACTC,UAAW,CACTC,MAAO,kBAETC,MAAO,CACLP,UAAW,uBACXQ,aAAa,EACbC,IAAK,IACLC,IAAK,KAGTC,MAAO,CAAC,CACNN,UAAW,CACTC,MAAO,kBAETC,MAAO,CACLP,UAAW,6BAKnBY,wBAAyB,CACvBhB,UAAW,CACTC,OAAQ,eACRC,SAAU,KAEZC,OAAQ,CACNN,OAAQ,CACNO,UAAW,uBACXC,SAAU,KAGdC,OAAQ,CACNC,MAAO,CAAC,CACNC,SAAS,EACTC,UAAW,CACTC,MAAO,kBAETC,MAAO,CACLP,UAAW,uBACXQ,aAAa,EACbC,IAAK,GACLC,IAAK,KAGTC,MAAO,CAAC,CACNN,UAAW,CACTC,MAAO,kBAETC,MAAO,CACLP,UAAW,8BAMrB,EAAKjB,cAAgB,EAAKA,cAAcvC,KAAnB,gBAlFP,E,0DAqFNE,GACZC,KAAKP,MAAM2C,cAAgBrC,EAAMG,OAAOC,MACxCH,KAAKP,MAAM0C,kBAAoBnC,KAAKP,MAAMiD,QAAQ3C,EAAMG,OAAOC,MAAM,GAAGsD,QAKxEzD,KAAKkE,yB,2CAILlE,KAAKC,SAAS,CACZqC,gBAAiB,O,mCAIR6B,EAAiBC,GAC5BpE,KAAKC,SAAS,CAAC0C,qBAAsB,CACnCG,OAAQ,CAAC,eAAW,OAAQ,SAAU,WAAY,MAAO,WAAY,SAAU,WAAY,WAC3F,mBAAe,WAAY,iBAC3BD,SAAU,CACR,CACEwB,MAAO,gEAAwDrE,KAAKP,MAAM0C,kBAC1ES,KAAMuB,EAAgBG,KAAI,SAACC,GACzB,OAAOA,EAAIC,QAAQ,MAGrBC,YAAY,EACZC,YAAa,EACbC,eAAgB,OAChBC,gBAAiB,cACjBC,YAAa,wBACbC,gBAAiB,QACjBC,iBAAkB,oBAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,qBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,MAItBxC,kBAAmB,CACjBD,OAAQ,CAAC,eAAW,OAAQ,SAAU,WAAY,MAAO,WAAY,SAAU,WAAY,WACzF,mBAAe,WAAY,iBAC3BD,SAAU,CACR,CACEwB,MAAO,mFAAiErE,KAAKP,MAAM0C,kBACnFS,KAAMwB,EAAaE,KAAI,SAACC,GACtB,OAAOA,EAAIC,QAAQ,MAGrBC,YAAY,EACZC,YAAa,GACbC,eAAgB,OAChBC,gBAAiB,qBACjBY,qBAAsB,2B,gNASQnF,MAAM,2CAA4CL,KAAKP,MAAM2C,cAAgB,8B,cAAzGqD,E,gBACyBpF,MAAM,2CAA4CL,KAAKP,MAAM2C,cAAgB,2B,cAAtGsD,E,gBACwBrF,MAAM,2CAA6CL,KAAKP,MAAM2C,e,cAAtFuD,E,iBACwBtF,MAAM,uC,eAA9BuF,E,iBACuCvF,MAAM,2CAA6CL,KAAKP,MAAM2C,cAAgB,2B,eAArHyD,E,iBAC6CxF,MAAM,2CAA6CL,KAAKP,MAAM2C,cAAgB,iC,eAA3H0D,E,iBACyCzF,MAAM,2CAA6CL,KAAKP,MAAM2C,cAAgB,6B,eAAvH2D,E,iBAEwBN,EAAoB3E,O,eAA5CqD,E,iBACqBuB,EAAiB5E,O,eAAtCsD,E,iBACoBuB,EAAgB7E,O,eAApCkF,E,iBACoBJ,EAAgB9E,O,eAApCmF,E,iBACmCJ,EAA+B/E,O,eAAlEoF,E,iBACyCJ,EAAqChF,O,eAA9EqF,E,iBACqCJ,EAAiCjF,O,QAAtEsF,E,OAENpG,KAAKC,SAAS,CACZoC,mBAAoB2D,EAAYA,EAAYK,OAAO,GAAGC,YACtDhE,gBAAiB0D,EAAYA,EAAYK,OAAO,GAAGE,SACnDhE,uBAAwB2D,EACxBzD,6BAA8B0D,EAC9B3D,wBAAyB4D,EACzB1D,QAASuD,EAAY3B,KAAI,SAACkC,GACxB,MAAO,CAACrG,MAAOqG,EAAEvH,GAAIwE,QAAS+C,EAAEC,iBAIpCzG,KAAK0G,aAAavC,EAAiBC,G,kDAInC/C,QAAQC,IAAR,M,0JAIc,IAAD,OACftB,KAAKkE,uBACLyC,aAAa,WACX,EAAKzC,yBACJ,O,+BAKL,OACE,kBAAC0C,EAAA,EAAD,CAAW1I,UAAU,eACnB,kBAAC2I,EAAA,EAAD,CAAK3I,UAAU,YACb,kBAAC4I,EAAA,EAAD,CAAKC,GAAG,KACN,yBAAK7I,UAAU,sBACb,kBAACuD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYzD,UAAU,eAAtB,yBACA,kBAACuD,EAAA,EAAKO,KAAN,CAAW9D,UAAU,aAAa8B,KAAKP,MAAM4C,mBAA7C,aAKR,kBAACyE,EAAA,EAAD,CAAKC,GAAG,KACN,yBAAK7I,UAAU,mBACb,kBAACuD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYzD,UAAU,eAAtB,kCACA,kBAACuD,EAAA,EAAKO,KAAN,CAAW9D,UAAU,aAAa8B,KAAKP,MAAM6C,gBAA7C,SAKR,kBAACwE,EAAA,EAAD,CAAKC,GAAG,MAER,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACN,yBAAK7I,UAAU,gBACb,kBAACuD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYzD,UAAU,eAAtB,YACE,4BAAQA,UAAU,eAClBiC,MAAOH,KAAKP,MAAM2C,cAClBP,SAAU7B,KAAKoC,eAEZpC,KAAKP,MAAMiD,QAAQ4B,KAAI,SAACkC,GAAD,OACxB,4BAAQQ,IAAKR,EAAErG,MAAOA,MAAOqG,EAAErG,OAC5BqG,EAAE/C,kBAQnB,kBAACoD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAK5I,UAAU,oBACb,kBAAC,IAAD,CACA0E,KAAM5C,KAAKP,MAAMkD,qBACjBsE,QAASjH,KAAKP,MAAMwE,wBACpBiD,MAAO,GACPC,OAAQ,QAKd,kBAACN,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAK5I,UAAU,oBACb,kBAAC,IAAD,CACA0E,KAAM5C,KAAKP,MAAMsD,kBACjBkE,QAASjH,KAAKP,MAAMuD,qBACpBkE,MAAO,GACPC,OAAQ,QAKd,kBAACN,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAK7I,UAAU,eACb,kBAACuD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYzD,UAAU,eAAtB,sBACA,kBAACuD,EAAA,EAAKO,KAAN,CAAW9D,UAAU,aAAa8B,KAAKP,MAAM8C,4BAKrD,kBAACuE,EAAA,EAAD,CAAKC,GAAG,KACN,yBAAK7I,UAAU,eACb,kBAACuD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYzD,UAAU,eAAtB,gCACA,kBAACuD,EAAA,EAAKO,KAAN,CAAW9D,UAAU,aAAa8B,KAAKP,MAAMgD,kCAKrD,kBAACqE,EAAA,EAAD,CAAKC,GAAG,KACN,yBAAK7I,UAAU,eACb,kBAACuD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYzD,UAAU,eAAtB,oBACA,kBAACuD,EAAA,EAAKO,KAAN,CAAW9D,UAAU,aAAa8B,KAAKP,MAAM+C,mC,GApShClE,a,kBCkThB8I,G,yDAnTb,WAAY5H,GAAO,IAAD,8BAChB,cAAMA,IA+FR6H,iBAAmB,WACjB,EAAKpH,SAAS,CACZqH,iBAAiB,KAlGH,EAsGlBC,kBAAoB,WAClB,EAAKtH,SAAS,CACZqH,iBAAiB,KAxGH,EA4GlBE,WAAa,WACX,EAAKvH,SAAS,CACZwH,WAAW,KA9GG,EAkHlBC,YAAc,WACZ,EAAKzH,SAAS,CACZwH,WAAW,KAlHb,EAAKhI,MAAQ,CAIXgI,WAAW,EACXH,iBAAiB,EACjBK,aAAc,GACdC,MAAO,GACPC,cAAe,GACfC,aAAc,CACZ7I,GAAI,GACJa,MAAO,GACPa,SAAU,GACVoH,eAAgB,GAChBC,aAAc,IAEhBC,eAAgB,CACdnI,MAAO,GACPa,SAAU,GACVoH,eAAgB,KAGpB,EAAKD,aAAe,EAAKA,aAAajI,KAAlB,gBACpB,EAAKN,MAAQ,EAAKA,MAAMM,KAAX,gBACb,EAAKqI,SAAW,EAAKA,SAASrI,KAAd,gBAChB,EAAKsI,eAAiB,EAAKA,eAAetI,KAApB,gBACtB,EAAKuI,SAAW,EAAKA,SAASvI,KAAd,gBAChB,EAAKwI,YAAc,EAAKA,YAAYxI,KAAjB,gBACnB,EAAKyI,kBAAoB,EAAKA,kBAAkBzI,KAAvB,gBACzB,EAAK0I,SAAW,EAAKA,SAAS1I,KAAd,gBAChB,EAAK2I,WAAa,EAAKA,WAAW3I,KAAhB,gBAClB,EAAK4I,SAAW,EAAKA,SAAS5I,KAAd,gBAChB,EAAK6I,WAAa,EAAKA,WAAW7I,KAAhB,gBAClB,EAAK8I,iBAAmB,EAAKA,iBAAiB9I,KAAtB,gBAnCR,E,yLAuCGQ,MAAM,qC,cAAnBuC,E,gBACiBA,EAAK9B,O,OAAtBD,E,OAENb,KAAKC,SAAS,CACZ2H,MAAO/G,I,iRAKUR,MAAM,+C,cAAnBuC,E,gBACiBA,EAAK9B,O,OAAtBD,E,OAENb,KAAKC,SAAS,CACZ4H,cAAehH,I,gJAKjBb,KAAKyI,WACLzI,KAAK2I,qB,mCAGM1J,EAAIa,EAAOa,EAAUoH,EAAgBC,GAChDhI,KAAKP,MAAMqI,aAAe,CACxB7I,GAAIA,EACJa,MAAOA,EACPa,SAAUA,EACVoH,eAAgBA,EAChBC,aAAcA,GAEhBhI,KAAKwH,e,+BAGEzH,GACPC,KAAKP,MAAMwI,eAAenI,MAAQC,EAAMG,OAAOC,Q,kCAGrCJ,GACVC,KAAKP,MAAMwI,eAAetH,SAAWZ,EAAMG,OAAOC,Q,wCAGlCJ,GAChBC,KAAKP,MAAMwI,eAAeF,eAAiBhI,EAAMG,OAAOC,Q,4BAGpDJ,GACJC,KAAKP,MAAMqI,aAAahI,MAAQC,EAAMG,OAAOC,Q,+BAGtCJ,GACPC,KAAKP,MAAMqI,aAAanH,SAAWZ,EAAMG,OAAOC,Q,qCAGnCJ,GACbC,KAAKP,MAAMqI,aAAaC,eAAiBhI,EAAMG,OAAOC,Q,wJA4BtDkB,QAAQC,IAAItB,KAAKP,MAAMwI,gBACvB,IACE5H,MAAM,oCAAqC,CACzCC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,OAAU,oBAEZC,KAAMC,KAAKC,UAAU,CACnBZ,MAAOE,KAAKP,MAAMwI,eAAenI,MACjCa,SAAUX,KAAKP,MAAMwI,eAAetH,SACpCoH,eAAgB/H,KAAKP,MAAMwI,eAAeF,mBAG7CnH,MAAK,SAAAC,GACJ,EAAK4H,WACL,EAAKlB,uBAGT,MAAMhG,GACJF,QAAQC,IAAIC,G,gLAICtC,G,4EACfoB,MAAM,qCAAqCpB,EAAI,CAC7CqB,OAAQ,SACRsI,OAAQ,CACN,eAAgB,mBAChB,OAAU,sBAGbhI,MAAK,SAAAC,GACJ,EAAK4H,c,wPAKPpI,MAAM,qCAAqCL,KAAKP,MAAMqI,aAAa7I,GAAI,CACrEqB,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,OAAU,oBAEZC,KAAMC,KAAKC,UAAU,CACnBzB,GAAIe,KAAKP,MAAMqI,aAAa7I,GAC5Ba,MAAOE,KAAKP,MAAMqI,aAAahI,MAC/Ba,SAAUX,KAAKP,MAAMqI,aAAanH,SAClCoH,eAAgB/H,KAAKP,MAAMqI,aAAaC,mBAG3CnH,MAAK,SAAAC,GACJ,EAAK4H,WACL,EAAKf,iB,qIAGC,IAAD,OACAE,EAAS5H,KAAKP,MAAdmI,MACP,OACE,kBAAChB,EAAA,EAAD,CAAW1I,UAAU,eACnB,kBAAC2I,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,wEAGJ,kBAACD,EAAA,EAAD,KACE,kBAACzI,EAAA,EAAD,CAAQF,UAAU,UAAUG,QAAQ,OAAO4D,QAASjC,KAAKqH,kBAAzD,UAEF,kBAACR,EAAA,EAAD,KACE,kBAACgC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC3K,QAAQ,OAAOO,MAAO,CAACC,UAAW,SAC9D,+BACE,kCACA,qCACA,0CACA,sCACA,yCAEF,+BACG+I,EAAMtD,KAAI,SAAC2E,GACV,OACA,wBAAIjC,IAAKiC,EAAEhK,IACT,4BAAKgK,EAAEhK,IACP,4BAAKgK,EAAEnJ,OACP,4BAAKmJ,EAAEtI,UACP,4BAAKsI,EAAEjB,aAAa9G,UACpB,4BACE,kBAAC9C,EAAA,EAAD,CAAQF,UAAU,UAAUG,QAAQ,OAAO4D,QAAS,EAAK6F,aAAajI,KAAK,EAAMoJ,EAAEhK,GAAIgK,EAAEnJ,MAAOmJ,EAAEtI,SAAUsI,EAAElB,eAAgBkB,EAAEjB,aAAa9G,WAA7I,UACA,kBAAC9C,EAAA,EAAD,CAAQF,UAAU,YAAYG,QAAQ,OAAO4D,QAAS,EAAKuG,WAAW3I,KAAK,EAAMoJ,EAAEhK,KAAnF,qBASZ,kBAACiK,EAAA,EAAD,CAAOC,KAAMnJ,KAAKP,MAAMgI,UAAW2B,OAAQpJ,KAAKP,MAAMiI,YAAaxJ,UAAU,WAC7E,kBAACgL,EAAA,EAAMG,OAAP,KACE,kBAACH,EAAA,EAAMI,MAAP,uBAEF,kBAACJ,EAAA,EAAMK,KAAP,KACE,kBAAC9H,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,WACA,kBAACF,EAAA,EAAKG,QAAN,CAAcE,KAAK,OAAO0H,UAAQ,EAACC,aAAczJ,KAAKP,MAAMqI,aAAa7I,MAE3E,kBAACwC,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,cACA,kBAACF,EAAA,EAAKG,QAAN,CAAcE,KAAK,OAAO2H,aAAczJ,KAAKP,MAAMqI,aAAahI,MAAO+B,SAAU7B,KAAKT,SAExF,kBAACkC,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,mBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcE,KAAK,OAAO2H,aAAczJ,KAAKP,MAAMqI,aAAanH,SAAUkB,SAAU7B,KAAKkI,YAE3F,kBAACzG,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,iBAEF,kBAACF,EAAA,EAAKC,MAAN,KACA,4BACExD,UAAU,eACV2D,SAAU7B,KAAKmI,gBAEZnI,KAAKP,MAAMoI,cAAcvD,KAAI,SAAC2E,GAAD,OAC5B,4BAAQjC,IAAKiC,EAAEhK,GAAIkB,MAAO8I,EAAEhK,IAAKgK,EAAE/H,iBAO7C,kBAACgI,EAAA,EAAMQ,OAAP,KACE,kBAACtL,EAAA,EAAD,CAAQC,QAAQ,YAAY4D,QAASjC,KAAK0H,aAA1C,WAGA,kBAACtJ,EAAA,EAAD,CAAQC,QAAQ,UAAU4D,QAASjC,KAAKuI,UAAxC,oBAMJ,kBAACW,EAAA,EAAD,CAAOC,KAAMnJ,KAAKP,MAAM6H,gBAAiB8B,OAAQpJ,KAAKP,MAAM8H,kBAAmBrJ,UAAU,WACvF,kBAACgL,EAAA,EAAMG,OAAP,KACE,kBAACH,EAAA,EAAMI,MAAP,oCAEF,kBAACJ,EAAA,EAAMK,KAAP,KACE,kBAAC9H,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,cACA,kBAACF,EAAA,EAAKG,QAAN,CAAcE,KAAK,OAAOD,SAAU7B,KAAKoI,YAE3C,kBAAC3G,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,mBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcE,KAAK,OAAOD,SAAU7B,KAAKqI,eAE3C,kBAAC5G,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,iBAEF,kBAACF,EAAA,EAAKC,MAAN,KAEE,4BACAxD,UAAU,eACV2D,SAAU7B,KAAKsI,mBAEZtI,KAAKP,MAAMoI,cAAcvD,KAAI,SAAC2E,GAAD,OAC5B,4BAAQjC,IAAKiC,EAAEhK,GAAIkB,MAAO8I,EAAEhK,IAAKgK,EAAE/H,iBAO7C,kBAACgI,EAAA,EAAMQ,OAAP,KACE,kBAACtL,EAAA,EAAD,CAAQC,QAAQ,YAAY4D,QAASjC,KAAKuH,mBAA1C,WAGA,kBAACnJ,EAAA,EAAD,CAAQC,QAAQ,UAAU4D,QAASjC,KAAK0I,YAAxC,gB,GAzSoBpK,cCefqL,E,uKAZX,OACE,kBAAC/C,EAAA,EAAD,CAAW1I,UAAU,eACnB,kBAAC2I,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,mC,GALSxI,aCkBNsL,E,uKAdP,OACQ,yBAAK1L,UAAU,UACf,kBAACQ,EAAA,EAAD,CAAQC,OAAQ,KAAKN,QAAQ,OAAOO,MAAO,CAACC,UAAW,SAC/C,kBAACK,EAAA,EAAD,CAAKhB,UAAU,WACX,kBAAC,IAAD,CAASkB,OAAK,EAACC,YAAa,CAAEC,aAAc,+BAAiCpB,UAAU,WAAWC,GAAI,oDAAtG,WACA,kBAAC,IAAD,CAASkB,YAAa,CAAEC,aAAc,+BAAiCpB,UAAU,WAAWC,GAAG,qEAA/F,kBACA,kBAAC,IAAD,CAASkB,YAAa,CAAEC,aAAc,+BAAiCpB,UAAU,WAAWC,GAAI,2DAAhG,iB,GATLG,aCiCRuL,E,uKA3BX,OACE,6BACA,kBAAC,IAAD,KACE,kBAACjD,EAAA,EAAD,CAAW1I,UAAU,eACnB,kBAAC2I,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,sDAGR,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,SAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgD,KAAK,mDAAmD1K,OAAK,EAAC2K,UAAW7H,IAChF,kBAAC,IAAD,CAAO4H,KAAK,oEAAoEC,UAAW3C,IAC3F,kBAAC,IAAD,CAAO0C,KAAK,0DAA0DC,UAAWJ,W,GApBlErL,aCqBV0L,E,uKAtBX,OACE,6BACE,kBAACpD,EAAA,EAAD,CAAW1I,UAAU,eACrB,kBAAC2I,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kDAGR,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAM3I,GAAG,8CACL,kBAACC,EAAA,EAAD,CAASF,UAAU,gBAAgBG,QAAQ,WAA3C,eAKZ,kBAAC,EAAD,W,GAlBsBC,aCyBb2L,E,uKAxBX,OACE,kBAACrD,EAAA,EAAD,CAAW1I,UAAU,eACnB,kBAAC2I,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,gDAGR,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAM3I,GAAG,8CACL,kBAACC,EAAA,EAAD,CAASF,UAAU,gBAAgBG,QAAQ,WAA3C,cAIV,kBAACwI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,mB,GAjBkBxI,aC4Bf4L,G,8KAlBP,OACQ,kBAAC,IAAD,KACQ,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOJ,KAAK,wCAAwC1K,OAAK,EAAC2K,UAAW9L,IACrE,kBAAC,IAAD,CAAO6L,KAAK,6CAA6CC,UAAWxL,IACpE,kBAAC,IAAD,CAAOuL,KAAK,+CAA+CC,UAAWvL,IACtE,kBAAC,IAAD,CAAOsL,KAAK,6CAA6CC,UAAWxK,IACpE,kBAAC,IAAD,CAAOuK,KAAK,mDAAmDC,UAAWI,IAC1E,kBAAC,IAAD,CAAOL,KAAK,qDAAqDC,UAAWC,IAC5E,kBAAC,IAAD,CAAOF,KAAK,uDAAuDC,UAAWE,U,GAbxF3L,c,OCPlB8L,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2599cd93.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './Home.css';\r\n\r\nclass Home extends Component \r\n{\r\n  render() {\r\n    return ( \r\n        <div className=\"GreetingPanel\">\r\n            <h1>System do monitorowania parametrów mikroklimatu w Centrum Historii Zajezdnia.</h1>\r\n            <Link to='/Centrum-Historii-Zajezdnia-Web-Page/login'>\r\n              <Button className=\"btn\" variant=\"dark\">Zaloguj</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Home;","import React, { Component } from \"react\";\r\nimport './About.css';\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"AboutPanel\">\r\n        <h3>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas libero nisl, lobortis porta placerat ac, maximus ac magna. Curabitur dapibus nunc nunc, auctor dignissim elit pharetra at. Pellentesque at ultrices diam. Sed molestie et tellus eget commodo. Suspendisse quis ornare sapien. In hac habitasse platea dictumst. Sed facilisis pretium erat sit amet sagittis. Fusce leo massa, blandit id sapien sit amet, laoreet dignissim sem. Quisque suscipit mattis ultricies. Donec id facilisis metus. Aenean gravida nisl nec est tempus, nec imperdiet dui luctus.</h3>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default About;","import React, { Component } from \"react\";\r\nimport './Contact.css';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"ContactPanel\">\r\n        <h3>Vivamus in elit tortor. Mauris efficitur ipsum fermentum nibh aliquet, imperdiet convallis felis gravida. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris in turpis non enim lacinia rutrum sed quis nulla. Suspendisse imperdiet ipsum sem, nec lacinia tellus placerat sodales. Ut sagittis risus id diam fringilla, id lacinia felis rhoncus.</h3>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './NavApp.css';\r\nclass NavApp extends Component\r\n{\r\n    render(){\r\n        return(\r\n                <div className=\"header\">\r\n                <Navbar expand =\"lg\" variant=\"dark\" style={{marginTop: \"50px\"}}>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\" style={{marginRight: \"50px\"}}>\r\n                            <NavLink exact activeStyle={{ borderBottom: '1px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to= '/Centrum-Historii-Zajezdnia-Web-Page/' >Strona główna</NavLink>\r\n                            <NavLink activeStyle={{ borderBottom: '1px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to=\"/Centrum-Historii-Zajezdnia-Web-Page/about\">O nas</NavLink>\r\n                            <NavLink activeStyle={{ borderBottom: '1px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to= '/Centrum-Historii-Zajezdnia-Web-Page/contact'>Kontakt</NavLink>\r\n                        </Nav>\r\n                     </Navbar.Collapse>\r\n                </Navbar>\r\n                </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default NavApp;","import React, { Component } from \"react\";\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      UserLogin: '',\r\n      UserPassword: '',\r\n      Message: '',\r\n    }\r\n\r\n    this.UserLogin = this.UserLogin.bind(this);\r\n    this.UserPassword = this.UserPassword.bind(this);\r\n    this.login = this.login.bind(this);\r\n    }\r\n    UserLogin(event){\r\n      this.setState({\r\n        UserLogin: event.target.value\r\n      })\r\n    }\r\n\r\n    UserPassword(event){\r\n      this.setState({\r\n        UserPassword: event.target.value\r\n      })\r\n    }\r\n\r\n  login(event){\r\n    event.preventDefault();\r\n    try{\r\n      fetch('https://localhost:5001/api/users/login',{\r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n\r\n        login: this.state.UserLogin,\r\n        password: this.state.UserPassword\r\n      })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      if(result.status === 'Error'){\r\n        this.setState({\r\n          Message: 'Nie udało się zalogować!'\r\n        })\r\n      }\r\n      else if(result.status === 'Success'){\r\n        this.setState({redirect: result.function});\r\n      }\r\n      else\r\n      {\r\n        this.setState({\r\n          Message: 'Nie udało się zalogować!'\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n\r\n    }\r\n    catch(error){\r\n      console.log('error');\r\n      this.setState({\r\n        Message: 'Nie udało się zalogować!'\r\n      });\r\n    }  \r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect === 'admin'){\r\n      return <Redirect push to='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel'/>\r\n    }\r\n    if (this.state.redirect === 'technician'){\r\n      return <Redirect push to='/Centrum-Historii-Zajezdnia-Web-Page/technicianpanel'/>\r\n    }\r\n    if (this.state.redirect === 'employee'){\r\n      return <Redirect push to='/Centrum-Historii-Zajezdnia-Web-Page/employeepanel'/>\r\n    }\r\n    return (\r\n        <div className=\"LoginPanel\">\r\n            <Form>\r\n              <Form.Group className=\"formLogin\">\r\n                <Form.Label>Podaj login</Form.Label>\r\n                <Form.Control className=\"My-Input\" onChange={this.UserLogin} type=\"text\" placeholder=\"Login\" />\r\n                <Form.Text className=\"text-muted\">\r\n                  {this.state.Message}\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"formPassword\">\r\n                <Form.Label>Podaj hasło</Form.Label>\r\n                <Form.Control className=\"My-Input\" onChange={this.UserPassword} type=\"password\" placeholder=\"*****\" />\r\n              </Form.Group>\r\n              {/* <Link to='/Centrum-Historii-Zajezdnia-Web-Page/measurement'> */}\r\n                {/* <Button  className=\"Login-Button\" onClick={this.login} variant=\"primary\" >\r\n                    Zaloguj\r\n                </Button> */}\r\n                <Button  className=\"Login-Button\" onClick={this.login} variant=\"primary\" >\r\n                    Zaloguj\r\n                </Button>\r\n              {/* </Link> */}\r\n            </Form>\r\n         </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Login;","import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Form} from 'react-bootstrap';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport './Measurement.css';\r\n\r\nclass MeasurementPanel extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          currentSensorName: 'Główna hala',\r\n          currentSensor: '1',\r\n          currentTemperature: '',\r\n          currentHumidity: '',\r\n          numberOfAllMeasurement: '',\r\n          numberOfMeasurmentToday: '',\r\n          numberOfMeasurementThisMonth: '',\r\n          sensors: [],\r\n          chartTemperatureData: {data: {datasets: [], labels: []}},\r\n          chartHumidityData: {data: {datasets: [], labels: []}},\r\n          optionsHumidityChart: {\r\n            animation: {\r\n              easing: \"easeOutCubic\",\r\n              duration: 1000\r\n            },\r\n            legend: {\r\n              labels: {\r\n                fontColor: 'rgb(255,255,255,0.6)',\r\n                fontSize: 15\r\n              }\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                display: true,\r\n                gridLines: {\r\n                  color: 'rgb(0,0,0,0.1)'\r\n                },\r\n                ticks: {\r\n                  fontColor: 'rgb(255,255,255,0.6)',\r\n                  beginAtZero: true,\r\n                  max: 100,\r\n                  min: 0\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                gridLines: {\r\n                  color: 'rgb(0,0,0,0.1)'\r\n                },\r\n                ticks: {\r\n                  fontColor: 'rgb(255,255,255,0.78)'\r\n                }\r\n              }]\r\n            }\r\n          },\r\n          optionsTemperatureChart: {\r\n            animation: {\r\n              easing: \"easeOutCubic\",\r\n              duration: 1000\r\n            },\r\n            legend: {\r\n              labels: {\r\n                fontColor: 'rgb(255,255,255,0.6)',\r\n                fontSize: 15\r\n              }\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                display: true,\r\n                gridLines: {\r\n                  color: 'rgb(0,0,0,0.1)'\r\n                },\r\n                ticks: {\r\n                  fontColor: 'rgb(255,255,255,0.6)',\r\n                  beginAtZero: true,\r\n                  max: 40,\r\n                  min: 0\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                gridLines: {\r\n                  color: 'rgb(0,0,0,0.1)'\r\n                },\r\n                ticks: {\r\n                  fontColor: 'rgb(255,255,255,0.78)'\r\n                }\r\n              }]\r\n            }\r\n          }\r\n        }\r\n        this.currentSensor = this.currentSensor.bind(this);\r\n      }\r\n\r\n  currentSensor(event){\r\n    this.state.currentSensor = event.target.value;\r\n    this.state.currentSensorName = this.state.sensors[event.target.value-1].display;\r\n    // this.setState({\r\n    //   currentSensor: event.target.value,\r\n    //   currentSensorName: this.state.sensors[event.target.value-1].display\r\n    // });\r\n    this.fetchingLoopFunction();\r\n  }\r\n\r\n  setCurrentHumidity(){\r\n    this.setState({\r\n      currentHumidity: 35\r\n    })\r\n  }\r\n\r\n  setChartData(dataTemperature, dataHumidity){\r\n    this.setState({chartTemperatureData: {\r\n      labels: ['Styczeń', 'Luty', 'Marzec', 'Kwiecien', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpien', 'Wrzesien',\r\n      'Pażdziernik', 'Listopad', 'Grudzień'],\r\n      datasets: [\r\n        {\r\n          label: 'Średnia temperatura w danym miesiącu dla czujnika: ' + this.state.currentSensorName,\r\n          data: dataTemperature.map((mes) => {\r\n            return mes.toFixed(2);\r\n          }),\r\n          // data: [20,21,22,22.3,20,21,22,22.3,20,21,22,22.3],\r\n          responsive: true,\r\n          lineTension: 0.,\r\n          borderCapStyle: 'butt',\r\n          backgroundColor: 'transparent',\r\n          borderColor: 'rgba(248, 54, 0, 0.8)',\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(254, 140, 0)',\r\n          pointBackgroundColor: '#ffffff',\r\n          pointBorderWidth: 9,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 3,\r\n          pointHitRadius: 10,\r\n        },\r\n      ],\r\n    },\r\n    chartHumidityData: {\r\n      labels: ['Styczeń', 'Luty', 'Marzec', 'Kwiecien', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpien', 'Wrzesien',\r\n        'Pażdziernik', 'Listopad', 'Grudzień'],\r\n        datasets: [\r\n          {\r\n            label: 'Średnia wilgotność powietrza w danym miesiącu dla czujnika: ' + this.state.currentSensorName,\r\n            data: dataHumidity.map((mes) => {\r\n              return mes.toFixed(2);\r\n            }),\r\n            // data: [35,36,32,32.5,40,42,40,35,38,40,41,43],\r\n            responsive: true,\r\n            lineTension: 0.1,\r\n            borderCapStyle: 'butt',\r\n            backgroundColor: 'rgba(45, 118, 245)',\r\n            hoverBackgroundColor: 'rgb(255, 71, 117)'\r\n          },\r\n        ],\r\n    }\r\n  })\r\n\r\n  }\r\n  async fetchingLoopFunction(){\r\n      try{\r\n        const responseTemperature = await fetch('https://localhost:44340/api/measurement/'+ this.state.currentSensor + '/averageTemperatureByMonth');\r\n        const responseHumidity = await fetch('https://localhost:44340/api/measurement/'+ this.state.currentSensor + '/averageHumidityByMonth');\r\n        const responseCurrent = await fetch('https://localhost:44340/api/measurement/' + this.state.currentSensor);\r\n        const responseSensors = await fetch('https://localhost:44340/api/sensors');\r\n        const responseNumberOfAllMeasurement = await fetch('https://localhost:44340/api/measurement/' + this.state.currentSensor + '/numberOfAllMeasurement');\r\n        const responseNumberOfMeasurementThisMonth = await fetch('https://localhost:44340/api/measurement/' + this.state.currentSensor + '/numberOfMeasurementThisMonth');\r\n        const responseNumberOfMeasurementToday = await fetch('https://localhost:44340/api/measurement/' + this.state.currentSensor + '/numberOfMeasurementToday');\r\n\r\n        const dataTemperature = await responseTemperature.json();\r\n        const dataHumidity = await responseHumidity.json();\r\n        const dataCurrent = await responseCurrent.json();\r\n        const dataSensors = await responseSensors.json();\r\n        const dataNumberOfAllMeasurement = await responseNumberOfAllMeasurement.json();\r\n        const dataNumberOfMeasurementThisMonth = await responseNumberOfMeasurementThisMonth.json();\r\n        const dataNumberOfMeasurementToday = await responseNumberOfMeasurementToday.json();\r\n\r\n        this.setState({\r\n          currentTemperature: dataCurrent[dataCurrent.length-1].temperature,\r\n          currentHumidity: dataCurrent[dataCurrent.length-1].humidity,\r\n          numberOfAllMeasurement: dataNumberOfAllMeasurement,\r\n          numberOfMeasurementThisMonth: dataNumberOfMeasurementThisMonth,\r\n          numberOfMeasurmentToday: dataNumberOfMeasurementToday,\r\n          sensors: dataSensors.map((s) => {\r\n            return {value: s.id, display: s.sensorName}\r\n          })\r\n        });\r\n\r\n        this.setChartData(dataTemperature, dataHumidity);\r\n\r\n      }\r\n      catch(error){\r\n        console.log(error);\r\n      }\r\n  }\r\n  \r\n  componentDidMount(){\r\n      this.fetchingLoopFunction();\r\n      setInterval( () => {\r\n        this.fetchingLoopFunction()\r\n      }, 30000);\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"myContainer\">\r\n        <Row className='firstRow'>\r\n          <Col xs='3'>\r\n            <div className='currentTemperature'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Aktualna temperatura:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.currentTemperature}°C</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col >\r\n          <Col xs='3'>\r\n            <div className='currentHumidity'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Aktualna wilgotność:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.currentHumidity}%</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col >\r\n          <Col xs='2'>\r\n          </Col>\r\n          <Col xs='4'>\r\n            <div className='sourceSensor'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Czujnik:</Form.Label>\r\n                    <select className='selectSensor'\r\n                    value={this.state.currentSensor}\r\n                    onChange={this.currentSensor}\r\n                    >\r\n                      {this.state.sensors.map((s) => \r\n                      <option key={s.value} value={s.value}>\r\n                        {s.display}\r\n                        </option>)}\r\n                    </select>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col >\r\n            <div className='measurementPanel'>\r\n              <Line \r\n              data={this.state.chartTemperatureData}\r\n              options={this.state.optionsTemperatureChart}\r\n              width={90}\r\n              height={50}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col >\r\n            <div className='measurementPanel'>\r\n              <Bar \r\n              data={this.state.chartHumidityData}\r\n              options={this.state.optionsHumidityChart}\r\n              width={90}\r\n              height={50}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n        <Col xs='4'>\r\n            <div className='quantityAll'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Wszystkie pomiary:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.numberOfAllMeasurement}</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n          <Col xs='4'>\r\n            <div className='quantityAll'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Pomiary w tym miesiącu:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.numberOfMeasurementThisMonth}</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n          <Col xs='4'>\r\n            <div className='quantityAll'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Pomiary dzisiaj:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.numberOfMeasurmentToday}</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MeasurementPanel;","import React, {Component } from \"react\";\r\nimport {Container, Row, Col, Table, Button, Modal, Form} from 'react-bootstrap';\r\nimport './UsersManagement.css';\r\nclass UsersManagement extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      // users: [{id: '1', login: 'admin', password: 'haslo'}, \r\n      // {id: '2', login: 'pracownik1', password: 'pracownik'},\r\n      // {id: '3', login: 'technik1', password: 'technik'}]\r\n      showModal: false,\r\n      showCreateModal: false,\r\n      responseText: '',\r\n      users: [],\r\n      userFunctions: [],\r\n      editUserData: {\r\n        id: '',\r\n        login: '',\r\n        password: '',\r\n        userFunctionId: '',\r\n        userFunction: ''\r\n      },\r\n      createUserData: {\r\n        login: '',\r\n        password: '',\r\n        userFunctionId: ''\r\n      }\r\n    }\r\n    this.editUserData = this.editUserData.bind(this);\r\n    this.Login = this.Login.bind(this);\r\n    this.Password = this.Password.bind(this);\r\n    this.UserFunctionId = this.UserFunctionId.bind(this);\r\n    this.LoginNew = this.LoginNew.bind(this);\r\n    this.PasswordNew = this.PasswordNew.bind(this);\r\n    this.UserFunctionIdNew = this.UserFunctionIdNew.bind(this);\r\n    this.editUser = this.editUser.bind(this);\r\n    this.deleteUser = this.deleteUser.bind(this);\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.createUser = this.createUser.bind(this);\r\n    this.getUserFunctions = this.getUserFunctions.bind(this);\r\n  }\r\n\r\n  async getUsers(){\r\n    const data = await fetch('https://localhost:44340/api/users');\r\n    const response = await data.json();\r\n\r\n    this.setState({\r\n      users: response\r\n    })\r\n  }\r\n\r\n  async getUserFunctions(){\r\n    const data = await fetch('https://localhost:44340/api/users/functions');\r\n    const response = await data.json();\r\n\r\n    this.setState({\r\n      userFunctions: response\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUsers();\r\n    this.getUserFunctions();\r\n  }\r\n\r\n  editUserData(id, login, password, userFunctionId, userFunction){\r\n    this.state.editUserData = {\r\n      id: id,\r\n      login: login,\r\n      password: password,\r\n      userFunctionId: userFunctionId,\r\n      userFunction: userFunction\r\n    };\r\n    this.handleShow();\r\n  }\r\n\r\n  LoginNew(event){\r\n    this.state.createUserData.login = event.target.value;\r\n  }\r\n\r\n  PasswordNew(event){\r\n    this.state.createUserData.password = event.target.value;\r\n  }\r\n\r\n  UserFunctionIdNew(event){\r\n    this.state.createUserData.userFunctionId = event.target.value;\r\n  }\r\n\r\n  Login(event){\r\n    this.state.editUserData.login = event.target.value;\r\n  }\r\n\r\n  Password(event){\r\n    this.state.editUserData.password = event.target.value;\r\n  }\r\n\r\n  UserFunctionId(event){\r\n    this.state.editUserData.userFunctionId = event.target.value;\r\n  }\r\n\r\n  handleCreateShow = () => {\r\n    this.setState({\r\n      showCreateModal: true\r\n    })\r\n  }\r\n\r\n  handleCreateClose = () => {\r\n    this.setState({\r\n      showCreateModal: false\r\n    })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      showModal: true\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      showModal: false\r\n    });\r\n  }\r\n\r\n  async createUser(){\r\n    console.log(this.state.createUserData);\r\n    try{\r\n      fetch('https://localhost:44340/api/users', {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          login: this.state.createUserData.login,\r\n          password: this.state.createUserData.password,\r\n          userFunctionId: this.state.createUserData.userFunctionId\r\n        })\r\n      })\r\n      .then(response => {\r\n        this.getUsers();\r\n        this.handleCreateClose();\r\n      })\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteUser(id){\r\n    fetch('https://localhost:44340/api/users/'+id, {\r\n      method: 'delete',\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.getUsers();\r\n    })\r\n  }\r\n\r\n  async editUser(){    \r\n    fetch('https://localhost:44340/api/users/'+this.state.editUserData.id, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: this.state.editUserData.id,\r\n        login: this.state.editUserData.login,\r\n        password: this.state.editUserData.password,\r\n        userFunctionId: this.state.editUserData.userFunctionId\r\n      })\r\n    })\r\n    .then(response => {\r\n      this.getUsers();\r\n      this.handleClose();\r\n    })\r\n  }\r\n  render() {\r\n    const {users} = this.state;\r\n    return (\r\n      <Container className=\"myContainer\">\r\n        <Row>\r\n            <Col>\r\n            <h4>Zarządzanie pracownikami w bazie.</h4>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n          <Button className=\"btnEdit\" variant=\"dark\" onClick={this.handleCreateShow}>Dodaj</Button>\r\n        </Row>\r\n        <Row>\r\n          <Table striped bordered hover variant='dark' style={{marginTop: '20px'}}>\r\n            <thead>\r\n              <th>Id</th>\r\n              <th>Login</th>\r\n              <th>Hasło</th>\r\n              <th>Status</th>\r\n              <th>Operacje</th>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((u) => {\r\n                return(\r\n                <tr key={u.id}>\r\n                  <td>{u.id}</td>\r\n                  <td>{u.login}</td>\r\n                  <td>{u.password}</td>\r\n                  <td>{u.userFunction.function}</td>\r\n                  <td>\r\n                    <Button className=\"btnEdit\" variant=\"dark\" onClick={this.editUserData.bind(this, u.id, u.login, u.password, u.userFunctionId, u.userFunction.function)}>Edytuj</Button>\r\n                    <Button className=\"btnDelete\" variant=\"dark\" onClick={this.deleteUser.bind(this, u.id)}>Usuń</Button>\r\n                  </td>\r\n                </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n\r\n        <Modal show={this.state.showModal} onHide={this.state.handleClose} className=\"myModal\">\r\n        <Modal.Header>\r\n          <Modal.Title>Edycja danych</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Id</Form.Label>\r\n              <Form.Control type=\"text\" disabled defaultValue={this.state.editUserData.id}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Login</Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={this.state.editUserData.login} onChange={this.Login}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Hasło</Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={this.state.editUserData.password} onChange={this.Password}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Funkcja</Form.Label>\r\n            </Form.Group>\r\n            <Form.Group>\r\n            <select\r\n              className='createSelect'\r\n              onChange={this.UserFunctionId}\r\n              >\r\n                {this.state.userFunctions.map((u) => \r\n                  <option key={u.id} value={u.id}>{u.function}</option>\r\n                )}\r\n                \r\n              </select>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Zamknij\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.editUser}>\r\n            Zatwierdź\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={this.state.showCreateModal} onHide={this.state.handleCreateClose} className=\"myModal\">\r\n        <Modal.Header>\r\n          <Modal.Title>Dodawanie użytkownika</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Login</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.LoginNew}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Hasło</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.PasswordNew}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Funkcja</Form.Label>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              {/* <Form.Control type=\"text\" defaultValue={this.state.createUserData.userFunctionId} onChange={this.UserFunctionIdNew}/> */}\r\n              <select\r\n              className='createSelect'\r\n              onChange={this.UserFunctionIdNew}\r\n              >\r\n                {this.state.userFunctions.map((u) => \r\n                  <option key={u.id} value={u.id}>{u.function}</option>\r\n                )}\r\n                \r\n              </select>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCreateClose}>\r\n            Zamknij\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.createUser}>\r\n            Dodaj\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n \r\nexport default UsersManagement;","import React, { Component } from \"react\";\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport './Measurement.css';\r\n\r\nclass Server extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"myContainer\">\r\n        <Row>\r\n            <Col>\r\n            Sprawdzenie serwera.\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Server;","import React, { Component } from \"react\";\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './NavApp.css';\r\nclass NavAdmin extends Component\r\n{\r\n    render(){\r\n        return(\r\n                <div className=\"header\">\r\n                <Navbar expand =\"lg\" variant=\"dark\" style={{marginTop: \"30px\"}}>\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavLink exact activeStyle={{ borderBottom: '2px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to= '/Centrum-Historii-Zajezdnia-Web-Page/admin-panel' >Pomiary</NavLink>\r\n                            <NavLink activeStyle={{ borderBottom: '2px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to=\"/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/users-management\">Zarządzaj</NavLink>\r\n                            <NavLink activeStyle={{ borderBottom: '2px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to= '/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/server'>Serwer</NavLink>\r\n                        </Nav>\r\n                </Navbar>\r\n                </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default NavAdmin;","import React, { Component } from \"react\";\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport './Measurement.css';\r\nimport MeasurementPanel from \"./MeasurementPanel\";\r\nimport UsersManagement from './UsersManagement';\r\nimport Server from './Server';\r\nimport NavAdmin from './NavAdmin';\r\n\r\nclass AdminPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Router>\r\n        <Container className=\"myContainer\">\r\n          <Row>\r\n              <Col>\r\n                  <h1>Panel administratora</h1>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <NavAdmin />\r\n            </Col >\r\n          </Row>\r\n        </Container>\r\n        <Switch>\r\n          <Route path='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel' exact component={MeasurementPanel}></Route>\r\n          <Route path='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/users-management' component={UsersManagement}></Route>\r\n          <Route path='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/server' component={Server}></Route>\r\n        </Switch>\r\n                        \r\n      </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default AdminPanel;","import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport './Measurement.css';\r\nimport MeasurementPanel from './MeasurementPanel';\r\n\r\nclass EmployeePanel extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container className=\"myContainer\">\r\n        <Row>\r\n            <Col>\r\n                <h1>Panel pracownika</h1>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n              <Link to='/Centrum-Historii-Zajezdnia-Web-Page/login'>\r\n                  <Button  className=\"Login-Button2\" variant='primary'>Wyloguj</Button>\r\n              </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <MeasurementPanel/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default EmployeePanel;","import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport './Measurement.css';\r\n\r\nclass TechnicianPanel extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"myContainer\">\r\n        <Row>\r\n            <Col>\r\n                <h1>Panel technika</h1>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n              <Link to='/Centrum-Historii-Zajezdnia-Web-Page/login'>\r\n                  <Button  className=\"Login-Button2\" variant='primary'>Wyloguj</Button>\r\n              </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>\r\n            TODO\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n \r\nexport default TechnicianPanel;","import React, { Component } from \"react\";\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport NavApp from './NavApp';\r\nimport Login from './Login';\r\nimport AdminMainPanel from \"./AdminMainPanel\";\r\nimport EmployeePanel from \"./EmployeePanel\";\r\nimport TechnicianPanel from './TechnicianPanel';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nclass App extends Component\r\n{\r\n    render(){\r\n        return(\r\n                <Router>\r\n                        <NavApp />\r\n                        <Switch>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/' exact component={Home}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/about' component={About}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/contact' component={Contact}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/login' component={Login}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel' component={AdminMainPanel}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/employeepanel' component={EmployeePanel}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/technicianpanel' component={TechnicianPanel}></Route>\r\n                        </Switch>\r\n                        \r\n                </Router>\r\n          );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App';\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <App/> ,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}