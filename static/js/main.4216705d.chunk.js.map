{"version":3,"sources":["images/map.png","Home.js","About.js","Contact.js","NavApp.js","Login.js","MeasurementPanel.js","UsersManagement.js","Server.js","NavAdmin.js","Sensors.js","AdminMainPanel.js","EmployeePanel.js","TechnicianPanel.js","CodeTemplate.js","App.js","index.js"],"names":["module","exports","Home","className","to","Button","variant","Component","About","Contact","NavApp","Navbar","expand","style","marginTop","Toggle","aria-controls","Collapse","id","Nav","marginRight","exact","activeStyle","borderBottom","Login","props","state","UserLogin","UserPassword","Message","bind","login","event","this","setState","target","value","preventDefault","fetch","method","headers","body","JSON","stringify","password","then","response","json","result","console","log","status","function","redirect","catch","err","error","push","Form","Group","Label","Control","onChange","type","placeholder","Text","onClick","MeasurementPanel","timePeriods","display","request","selectedPeriod","selectedPeriodName","currentSensorName","currentSensor","currentTemperature","currentHumidity","currentTemperatureStatus","currentHumidityStatus","numberOfAllMeasurement","numberOfMeasurementToday","numberOfMeasurementThisMonth","sensors","chartTemperatureData","data","datasets","labels","chartHumidityData","optionsHumidityChart","animation","easing","duration","legend","fontColor","fontSize","scales","yAxes","gridLines","color","ticks","beginAtZero","max","min","xAxes","optionsTemperatureChart","setTimePeriod","fetchingLoopFunction","dataTemperature","dataHumidity","newLabels","title","label","map","mes","toFixed","responsive","lineTension","borderCapStyle","backgroundColor","borderColor","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","hoverBackgroundColor","responseTemperature","responseHumidity","responseCurrent","responseSensors","responseNumberOfAllMeasurement","responseNumberOfMeasurementThisMonth","responseNumberOfMeasurementToday","dataCurrent","dataSensors","dataNumberOfAllMeasurement","dataNumberOfMeasurementThisMonth","dataNumberOfMeasurementToday","length","temperature","humidity","s","sensorName","tmpDate","Date","setDate","getDate","i","getMonth","getFullYear","setChartData","setInterval","Container","Row","Col","xs","key","t","options","width","height","UsersManagement","handleCreateShow","showCreateModal","handleCreateClose","handleShow","showModal","handleClose","handleShowHistory","showModalHistory","handleCloseHistory","responseText","users","loginHistory","loginHistoryByUserId","userFunctions","editUserData","userFunctionId","userFunction","loginHistories","createUserData","editUserDataExac","Password","UserFunctionId","LoginNew","PasswordNew","UserFunctionIdNew","editUser","deleteUser","deleteLoginHistory","getUsers","getLoginHistory","getLoginHistoryByUserId","createUser","getUserFunctions","history","header","Table","striped","bordered","hover","u","l","dateTime","userId","userLogin","userPassword","success","Modal","show","onHide","Header","Title","Body","disabled","defaultValue","Footer","size","Server","NavAdmin","Sensors","editSensorData","sensorIpAddress","externalIpAddress","top","left","createSensorData","newX","newY","offsetX","offsetY","getSensors","deleteSensors","editSensor","createSensor","SensorNameNew","SensorIpAddressNew","SensorNameEdit","SensorIpAddressEdit","mouseDownSensor","move","remove","SensorLeftEdit","SensorTopEdit","SensorLeftNew","SensorTopNew","SensorExternalIpAddressEdit","SensorExternalIpAddressNew","name","ip","external","ipAddress","externalIp","e","el","clientX","getBoundingClientRect","clientY","addEventListener","pageX","pageY","removeEventListener","parseInt","src","require","onMouseDown","onMouseUp","position","AdminPanel","path","component","EmployeePanel","TechnicianPanel","generatedCodeData","mask","gate","dns","networkName","fileName","template","IpAddress","Mask","Gate","DNS","NetworkName","Top","Left","ExternalIp","SensorName","Create","clearData","timeNow","text1","replace","getHours","getMinutes","element","document","createElement","setAttribute","encodeURIComponent","appendChild","click","removeChild","marginLeft","marginBottom","App","AdminMainPanel","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4216705d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map.13b5b926.png\";","import React, { Component } from \"react\";\r\nimport {Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './Home.css';\r\n\r\nclass Home extends Component \r\n{\r\n  render() {\r\n    return ( \r\n        <div className=\"GreetingPanel\">\r\n            <h1>System do monitorowania parametrów mikroklimatu w Centrum Historii Zajezdnia.</h1>\r\n            <Link to='/Centrum-Historii-Zajezdnia-Web-Page/login'>\r\n              <Button className=\"btn\" variant=\"dark\">Zaloguj</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Home;","import React, { Component } from \"react\";\r\nimport './About.css';\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"AboutPanel\">\r\n        <h3>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas libero nisl, lobortis porta placerat ac, maximus ac magna. Curabitur dapibus nunc nunc, auctor dignissim elit pharetra at. Pellentesque at ultrices diam. Sed molestie et tellus eget commodo. Suspendisse quis ornare sapien. In hac habitasse platea dictumst. Sed facilisis pretium erat sit amet sagittis. Fusce leo massa, blandit id sapien sit amet, laoreet dignissim sem. Quisque suscipit mattis ultricies. Donec id facilisis metus. Aenean gravida nisl nec est tempus, nec imperdiet dui luctus.</h3>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default About;","import React, { Component } from \"react\";\r\nimport './Contact.css';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"ContactPanel\">\r\n        <h3>Vivamus in elit tortor. Mauris efficitur ipsum fermentum nibh aliquet, imperdiet convallis felis gravida. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris in turpis non enim lacinia rutrum sed quis nulla. Suspendisse imperdiet ipsum sem, nec lacinia tellus placerat sodales. Ut sagittis risus id diam fringilla, id lacinia felis rhoncus.</h3>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './NavApp.css';\r\nclass NavApp extends Component\r\n{\r\n    render(){\r\n        return(\r\n                <div className=\"header\">\r\n                <Navbar expand =\"lg\" variant=\"dark\" style={{marginTop: \"50px\"}}>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\" style={{marginRight: \"50px\"}}>\r\n                            <NavLink exact activeStyle={{ borderBottom: '1px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to= '/Centrum-Historii-Zajezdnia-Web-Page/' >Strona główna</NavLink>\r\n                            <NavLink activeStyle={{ borderBottom: '1px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to=\"/Centrum-Historii-Zajezdnia-Web-Page/about\">O nas</NavLink>\r\n                            <NavLink activeStyle={{ borderBottom: '1px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to= '/Centrum-Historii-Zajezdnia-Web-Page/contact'>Kontakt</NavLink>\r\n                        </Nav>\r\n                     </Navbar.Collapse>\r\n                </Navbar>\r\n                </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default NavApp;","import React, { Component } from \"react\";\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      UserLogin: '',\r\n      UserPassword: '',\r\n      Message: '',\r\n    }\r\n\r\n    this.UserLogin = this.UserLogin.bind(this);\r\n    this.UserPassword = this.UserPassword.bind(this);\r\n    this.login = this.login.bind(this);\r\n    }\r\n    UserLogin(event){\r\n      this.setState({\r\n        UserLogin: event.target.value\r\n      })\r\n    }\r\n\r\n    UserPassword(event){\r\n      this.setState({\r\n        UserPassword: event.target.value\r\n      })\r\n    }\r\n\r\n  login(event){\r\n    event.preventDefault();\r\n    try{\r\n      fetch('https://localhost:5001/api/users/login',{\r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n\r\n        login: this.state.UserLogin,\r\n        password: this.state.UserPassword\r\n      })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      console.log(result);\r\n      if(result.status === 'Error'){\r\n        this.setState({\r\n          Message: 'Nie udało się zalogować!'\r\n        })\r\n      }\r\n      else if(result.status === 'Success'){\r\n        console.log(result.function)\r\n        this.setState({redirect: result.function});\r\n      }\r\n      else\r\n      {\r\n        this.setState({\r\n          Message: 'Nie udało się zalogować!'\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n\r\n    }\r\n    catch(error){\r\n      console.log('error');\r\n      this.setState({\r\n        Message: 'Nie udało się zalogować!'\r\n      });\r\n    }  \r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect === 'admin'){\r\n      return <Redirect push to='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel'/>\r\n    }\r\n    if (this.state.redirect === 'technician'){\r\n      return <Redirect push to='/Centrum-Historii-Zajezdnia-Web-Page/technicianpanel'/>\r\n    }\r\n    if (this.state.redirect === 'employee'){\r\n      return <Redirect push to='/Centrum-Historii-Zajezdnia-Web-Page/employeepanel'/>\r\n    }\r\n    return (\r\n        <div className=\"LoginPanel\">\r\n            <Form>\r\n              <Form.Group className=\"formLogin\">\r\n                <Form.Label>Podaj login</Form.Label>\r\n                <Form.Control className=\"My-Input\" onChange={this.UserLogin} type=\"text\" placeholder=\"Login\" />\r\n                <Form.Text className=\"text-muted\">\r\n                  {this.state.Message}\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"formPassword\">\r\n                <Form.Label>Podaj hasło</Form.Label>\r\n                <Form.Control className=\"My-Input\" onChange={this.UserPassword} type=\"password\" placeholder=\"*****\" />\r\n              </Form.Group>\r\n                <Button  className=\"Login-Button\" onClick={this.login} variant=\"primary\" >\r\n                    Zaloguj\r\n                </Button>\r\n            </Form>\r\n         </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Login;","import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Form} from 'react-bootstrap';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport './Measurement.css';\r\n\r\nclass MeasurementPanel extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          timePeriods: [{value: 0, display: 'Ostatnie 7 dni', request: 'LastWeek'}, {value: 1, display:'Aktualny rok', request: 'ByMonth'}, {value: 2, display: 'Ostatnie 5 lat', request: 'LastYears'}],\r\n          selectedPeriod: '1',\r\n          selectedPeriodName: 'ByMonth',\r\n          currentSensorName: '',\r\n          currentSensor: '1',\r\n          currentTemperature: '',\r\n          currentHumidity: '',\r\n          currentTemperatureStatus: '',\r\n          currentHumidityStatus: '',\r\n          numberOfAllMeasurement: '',\r\n          numberOfMeasurementToday: '',\r\n          numberOfMeasurementThisMonth: '',\r\n          sensors: [],\r\n          chartTemperatureData: {data: {datasets: [], labels: []}},\r\n          chartHumidityData: {data: {datasets: [], labels: []}},\r\n          optionsHumidityChart: {\r\n            animation: {\r\n              easing: \"easeOutCubic\",\r\n              duration: 1000\r\n            },\r\n            legend: {\r\n              labels: {\r\n                fontColor: 'rgb(255,255,255,0.6)',\r\n                fontSize: 15\r\n              }\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                display: true,\r\n                gridLines: {\r\n                  color: 'rgb(0,0,0,0.1)'\r\n                },\r\n                ticks: {\r\n                  fontColor: 'rgb(255,255,255,0.6)',\r\n                  beginAtZero: true,\r\n                  max: 100,\r\n                  min: 0\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                gridLines: {\r\n                  color: 'rgb(0,0,0,0.1)'\r\n                },\r\n                ticks: {\r\n                  fontColor: 'rgb(255,255,255,0.78)'\r\n                }\r\n              }]\r\n            }\r\n          },\r\n          optionsTemperatureChart: {\r\n            animation: {\r\n              easing: \"easeOutCubic\",\r\n              duration: 1000\r\n            },\r\n            legend: {\r\n              labels: {\r\n                fontColor: 'rgb(255,255,255,0.6)',\r\n                fontSize: 15\r\n              }\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                display: true,\r\n                gridLines: {\r\n                  color: 'rgb(0,0,0,0.1)'\r\n                },\r\n                ticks: {\r\n                  fontColor: 'rgb(255,255,255,0.6)',\r\n                  beginAtZero: true,\r\n                  max: 40,\r\n                  min: 0\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                gridLines: {\r\n                  color: 'rgb(0,0,0,0.1)'\r\n                },\r\n                ticks: {\r\n                  fontColor: 'rgb(255,255,255,0.78)'\r\n                }\r\n              }]\r\n            }\r\n          }\r\n        }\r\n        this.currentSensor = this.currentSensor.bind(this);\r\n        this.setTimePeriod = this.setTimePeriod.bind(this);\r\n      }\r\n\r\n  currentSensor(event){\r\n    this.state.currentSensor = event.target.value;\r\n    this.state.currentSensorName = this.state.sensors[event.target.value-1].display;\r\n    // this.setState({\r\n    //   currentSensor: event.target.value,\r\n    //   currentSensorName: this.state.sensors[event.target.value-1].display\r\n    // });\r\n    this.fetchingLoopFunction();\r\n  }\r\n\r\n  setTimePeriod(event){\r\n    this.state.selectedPeriod = event.target.value;\r\n    this.state.selectedPeriodName = this.state.timePeriods[event.target.value].request;\r\n    this.fetchingLoopFunction();\r\n  }\r\n\r\n  setChartData(dataTemperature, dataHumidity, newLabels, title){\r\n    this.setState({chartTemperatureData: {\r\n      labels: newLabels,\r\n      datasets: [\r\n        {\r\n          label: 'Średnia temperatura ' + title + ' dla czujnika: ' + this.state.currentSensorName,\r\n          data: dataTemperature.map((mes) => {\r\n            return mes.toFixed(2);\r\n          }),\r\n          // data: [20,21,22,22.3,20,21,22,22.3,20,21,22,22.3],\r\n          responsive: true,\r\n          lineTension: 0.,\r\n          borderCapStyle: 'butt',\r\n          backgroundColor: 'transparent',\r\n          borderColor: 'rgba(248, 54, 0, 0.8)',\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(254, 140, 0)',\r\n          pointBackgroundColor: '#ffffff',\r\n          pointBorderWidth: 9,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 3,\r\n          pointHitRadius: 10,\r\n        },\r\n      ],\r\n    },\r\n    chartHumidityData: {\r\n      labels: newLabels,\r\n        datasets: [\r\n          {\r\n            label: 'Średnia wilgotność powietrza ' + title +  ' dla czujnika ' + this.state.currentSensorName,\r\n            data: dataHumidity.map((mes) => {\r\n              return mes.toFixed(2);\r\n            }),\r\n            // data: [35,36,32,32.5,40,42,40,35,38,40,41,43],\r\n            responsive: true,\r\n            lineTension: 0.1,\r\n            borderCapStyle: 'butt',\r\n            backgroundColor: 'rgba(45, 118, 245)',\r\n            hoverBackgroundColor: 'rgb(255, 71, 117)'\r\n          },\r\n        ],\r\n    }\r\n  })\r\n\r\n  }\r\n  async fetchingLoopFunction(){\r\n      try{\r\n        const responseTemperature = await fetch('https://localhost:5001/api/measurement/'+ this.state.currentSensor + '/averageTemperature' + this.state.selectedPeriodName);\r\n        const responseHumidity = await fetch('https://localhost:5001/api/measurement/'+ this.state.currentSensor + '/averageHumidity' + this.state.selectedPeriodName);\r\n        const responseCurrent = await fetch('https://localhost:5001/api/measurement/' + this.state.currentSensor);\r\n        const responseSensors = await fetch('https://localhost:5001/api/sensors');\r\n        const responseNumberOfAllMeasurement = await fetch('https://localhost:5001/api/measurement/' + this.state.currentSensor + '/numberOfAllMeasurement');\r\n        const responseNumberOfMeasurementThisMonth = await fetch('https://localhost:5001/api/measurement/' + this.state.currentSensor + '/numberOfMeasurementThisMonth');\r\n        const responseNumberOfMeasurementToday = await fetch('https://localhost:5001/api/measurement/' + this.state.currentSensor + '/numberOfMeasurementToday');\r\n\r\n        const dataTemperature = await responseTemperature.json();\r\n        const dataHumidity = await responseHumidity.json();\r\n        const dataCurrent = await responseCurrent.json();\r\n        const dataSensors = await responseSensors.json();\r\n        const dataNumberOfAllMeasurement = await responseNumberOfAllMeasurement.json();\r\n        const dataNumberOfMeasurementThisMonth = await responseNumberOfMeasurementThisMonth.json();\r\n        const dataNumberOfMeasurementToday = await responseNumberOfMeasurementToday.json();\r\n\r\n        this.setState({\r\n          currentTemperature: dataCurrent[dataCurrent.length-1].temperature,\r\n          currentHumidity: dataCurrent[dataCurrent.length-1].humidity,\r\n          numberOfAllMeasurement: dataNumberOfAllMeasurement,\r\n          numberOfMeasurementThisMonth: dataNumberOfMeasurementThisMonth,\r\n          numberOfMeasurementToday: dataNumberOfMeasurementToday,\r\n          sensors: dataSensors.map((s) => {\r\n            return {value: s.id, display: s.sensorName}\r\n          }),\r\n          currentSensorName: dataSensors[0].sensorName\r\n        });\r\n\r\n        var tmpDate = new Date();\r\n        var newLabels = [];\r\n        var title = '';\r\n\r\n        switch(this.state.selectedPeriod){\r\n          case '0': {\r\n            tmpDate.setDate(tmpDate.getDate()-7);\r\n            for(var i=0; i<8; i++){\r\n              newLabels.push(tmpDate.getDate() + '.' + (tmpDate.getMonth()+1));\r\n              tmpDate.setDate(tmpDate.getDate() + 1);\r\n            }\r\n            title = 'w ciągu ostatnich 7 dni';\r\n            break;\r\n          }\r\n          case '1':{\r\n            newLabels = ['Styczeń', 'Luty', 'Marzec', 'Kwiecien', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień',\r\n            'Pażdziernik', 'Listopad', 'Grudzień'];\r\n            title = 'w danym miesiącu tego roku';\r\n            break;\r\n          }\r\n          case '2':{\r\n            newLabels = [tmpDate.getFullYear()-4, tmpDate.getFullYear()-3, tmpDate.getFullYear()-2, tmpDate.getFullYear()-1, tmpDate.getFullYear()];\r\n            title = 'w ciągu ostatnich 5 lat';\r\n            break;\r\n          }\r\n          default: {\r\n            break;\r\n          }\r\n        }\r\n\r\n        if(this.state.currentTemperature > 24){\r\n          this.setState({\r\n            currentTemperatureStatus: 'Uwaga! Zbyt wysoka temperatura!'\r\n          })\r\n        }\r\n        else if(this.state.currentTemperature < 18){\r\n          this.setState({\r\n            currentTemperatureStatus: 'Uwaga! Zbyt niska temperatura!'\r\n          })\r\n        }\r\n        else{\r\n          this.setState({\r\n            currentTemperatureStatus: ''\r\n          })\r\n        }\r\n\r\n        if(this.state.currentHumidity > 60){\r\n          this.setState({\r\n            currentHumidityStatus: 'Uwaga! Zbyt wysoka wilgotność powietrza!'\r\n          })\r\n        }\r\n        else if(this.state.currentHumidity < 40){\r\n          this.setState({\r\n            currentHumidityStatus: 'Uwaga! Zbyt niska wilgotność powietrza!'\r\n          })\r\n        }\r\n        else{\r\n          this.setState({\r\n            currentHumidityStatus: ''\r\n          })\r\n        }\r\n\r\n        this.setChartData(dataTemperature, dataHumidity, newLabels, title);\r\n\r\n      }\r\n      catch(error){\r\n        console.log(error);\r\n      }\r\n  }\r\n  \r\n  componentDidMount(){\r\n      this.fetchingLoopFunction();\r\n      setInterval( () => {\r\n        this.fetchingLoopFunction()\r\n      }, 30000);\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"myContainer\">\r\n        <Row className='firstRow'>\r\n          <Col xs='3'>\r\n            <div className='currentTemperature'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Aktualna temperatura:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.currentTemperature}°C</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col >\r\n          <Col xs='3'>\r\n            <div className='currentHumidity'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Aktualna wilgotność:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.currentHumidity}%</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col >\r\n          <Col xs='2'>\r\n          </Col>\r\n          <Col xs='4'>\r\n            <Row>\r\n              <div className='sourceSensor'>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label className='labelHeader'>Czujnik:</Form.Label>\r\n                      <select className='selectSensor'\r\n                      value={this.state.currentSensor}\r\n                      onChange={this.currentSensor}\r\n                      >\r\n                        {this.state.sensors.map((s) => \r\n                        <option key={s.value} value={s.value}>\r\n                          {s.display}\r\n                          </option>)}\r\n                      </select>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className='sourceSensor'>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Label className='labelHeader'>Okres:</Form.Label>\r\n                      <select className='selectSensor'\r\n                      value={this.state.selectedPeriod}\r\n                      onChange={this.setTimePeriod}\r\n                      >\r\n                        {this.state.timePeriods.map((t) => \r\n                        <option key={t.value} value={t.value}>\r\n                          {t.display}\r\n                          </option>)}\r\n                      </select>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs='12'>\r\n            <div className='currentTemperatureStatus'>\r\n              {this.state.currentTemperatureStatus}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs='12'>\r\n            <div className='currentHumidityStatus'>\r\n              {this.state.currentHumidityStatus}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col >\r\n            <div className='measurementPanel'>\r\n              <Line \r\n              data={this.state.chartTemperatureData}\r\n              options={this.state.optionsTemperatureChart}\r\n              width={90}\r\n              height={50}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col >\r\n            <div className='measurementPanel'>\r\n              <Bar \r\n              data={this.state.chartHumidityData}\r\n              options={this.state.optionsHumidityChart}\r\n              width={90}\r\n              height={50}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n        <Col xs='4'>\r\n            <div className='quantityAll'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Wszystkie pomiary:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.numberOfAllMeasurement}</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n          <Col xs='4'>\r\n            <div className='quantityAll'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Pomiary w tym miesiącu:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.numberOfMeasurementThisMonth}</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n          <Col xs='4'>\r\n            <div className='quantityAll'>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label className='labelHeader'>Pomiary dzisiaj:</Form.Label>\r\n                  <Form.Text className=\"labelBody\">{this.state.numberOfMeasurementToday}</Form.Text>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MeasurementPanel;","import React, {Component } from \"react\";\r\nimport {Container, Row, Col, Table, Button, Modal, Form} from 'react-bootstrap';\r\nimport './UsersManagement.css';\r\nclass UsersManagement extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      // users: [{id: '1', login: 'admin', password: 'haslo'}, \r\n      // {id: '2', login: 'pracownik1', password: 'pracownik'},\r\n      // {id: '3', login: 'technik1', password: 'technik'}]\r\n      showModal: false,\r\n      showCreateModal: false,\r\n      showModalHistory: false,\r\n      responseText: '',\r\n      users: [],\r\n      loginHistory: [],\r\n      loginHistoryByUserId: [],\r\n      userFunctions: [],\r\n      editUserData: {\r\n        id: '',\r\n        login: '',\r\n        password: '',\r\n        userFunctionId: '',\r\n        userFunction: '',\r\n        loginHistories: []\r\n      },\r\n      createUserData: {\r\n        login: '',\r\n        password: '',\r\n        userFunctionId: ''\r\n      }\r\n    }\r\n    this.editUserData = this.editUserData.bind(this);\r\n    this.editUserDataExac = this.editUserDataExac.bind(this);\r\n    this.Login = this.Login.bind(this);\r\n    this.Password = this.Password.bind(this);\r\n    this.UserFunctionId = this.UserFunctionId.bind(this);\r\n    this.LoginNew = this.LoginNew.bind(this);\r\n    this.PasswordNew = this.PasswordNew.bind(this);\r\n    this.UserFunctionIdNew = this.UserFunctionIdNew.bind(this);\r\n    this.editUser = this.editUser.bind(this);\r\n    this.deleteUser = this.deleteUser.bind(this);\r\n    this.deleteLoginHistory = this.deleteLoginHistory.bind(this);\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.getLoginHistory = this.getLoginHistory.bind(this);\r\n    this.getLoginHistoryByUserId = this.getLoginHistoryByUserId.bind(this);\r\n    this.createUser = this.createUser.bind(this);\r\n    this.getUserFunctions = this.getUserFunctions.bind(this);\r\n  }\r\n\r\n  async getLoginHistory(){\r\n    const response = await fetch('https://localhost:5001/api/loginHistory');\r\n    const data = await response.json();\r\n    this.setState({\r\n      loginHistory: data\r\n    });\r\n  }\r\n\r\n  async getLoginHistoryByUserId(id, login, password, userFunctionId, userFunction, history){\r\n    const response = await fetch ('https://localhost:5001/api/loginHistory/' + id);\r\n    const data = await response.json();\r\n    this.state.loginHistoryByUserId = data;\r\n    console.log(data);\r\n    this.editUserDataExac(id, login, password, userFunctionId, userFunction, history);\r\n    this.handleShowHistory();\r\n  }\r\n\r\n  async getUsers(){\r\n    const data = await fetch('https://localhost:5001/api/users');\r\n    const response = await data.json();\r\n    this.setState({\r\n      users: response\r\n    })\r\n  }\r\n\r\n  async deleteLoginHistory(){\r\n    fetch('https://localhost:5001/api/loginHistory',{\r\n      method: 'delete',\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.getLoginHistory();\r\n    })\r\n  }\r\n\r\n  async getUserFunctions(){\r\n    const data = await fetch('https://localhost:5001/api/users/functions');\r\n    const response = await data.json();\r\n\r\n    this.setState({\r\n      userFunctions: response\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getUsers();\r\n    this.getLoginHistory();\r\n    this.getUserFunctions();\r\n  }\r\n\r\n  editUserDataExac(id, login, password, userFunctionId, userFunction, history){\r\n    this.state.editUserData = {\r\n      id: id,\r\n      login: login,\r\n      password: password,\r\n      userFunctionId: userFunctionId,\r\n      userFunction: userFunction,\r\n      loginHistories: history\r\n    };\r\n  }\r\n\r\n  editUserData(id, login, password, userFunctionId, userFunction, history){\r\n    this.editUserDataExac(id, login, password, userFunctionId, userFunction, history);\r\n    this.handleShow();\r\n  }\r\n\r\n  LoginNew(event){\r\n    this.state.createUserData.login = event.target.value;\r\n  }\r\n\r\n  PasswordNew(event){\r\n    this.state.createUserData.password = event.target.value;\r\n  }\r\n\r\n  UserFunctionIdNew(event){\r\n    this.state.createUserData.userFunctionId = event.target.value;\r\n  }\r\n\r\n  Login(event){\r\n    this.state.editUserData.login = event.target.value;\r\n  }\r\n\r\n  Password(event){\r\n    this.state.editUserData.password = event.target.value;\r\n  }\r\n\r\n  UserFunctionId(event){\r\n    this.state.editUserData.userFunctionId = event.target.value;\r\n  }\r\n\r\n  handleCreateShow = () => {\r\n    this.setState({\r\n      showCreateModal: true\r\n    })\r\n  }\r\n\r\n  handleCreateClose = () => {\r\n    this.setState({\r\n      showCreateModal: false\r\n    })\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      showModal: true\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      showModal: false\r\n    });   \r\n  }\r\n\r\n  handleShowHistory = () => {\r\n    this.setState({\r\n      showModalHistory: true\r\n    });\r\n  }\r\n\r\n  handleCloseHistory = () => {\r\n    this.setState({\r\n      showModalHistory: false\r\n    });\r\n  }\r\n\r\n  async createUser(){\r\n    console.log(this.state.createUserData);\r\n    try{\r\n      fetch('https://localhost:5001/api/users', {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          login: this.state.createUserData.login,\r\n          password: this.state.createUserData.password,\r\n          userFunctionId: this.state.createUserData.userFunctionId\r\n        })\r\n      })\r\n      .then(response => {\r\n        this.getUsers();\r\n        this.handleCreateClose();\r\n      })\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteUser(id){\r\n    fetch('https://localhost:5001/api/users/'+id, {\r\n      method: 'delete',\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    })\r\n    .then(response => {\r\n      this.getUsers();\r\n    })\r\n  }\r\n\r\n  async editUser(){    \r\n    fetch('https://localhost:5001/api/users/'+this.state.editUserData.id, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: this.state.editUserData.id,\r\n        login: this.state.editUserData.login,\r\n        password: this.state.editUserData.password,\r\n        userFunctionId: this.state.editUserData.userFunctionId\r\n      })\r\n    })\r\n    .then(response => {\r\n      this.getUsers();\r\n      this.handleClose();\r\n    })\r\n  }\r\n  render() {\r\n    const {users, loginHistory, loginHistoryByUserId} = this.state;\r\n    return (\r\n      <Container className=\"myContainer\">\r\n        <Row>\r\n          <h3>Zarządzanie pracownikami w bazie</h3>\r\n        </Row>\r\n        <Row>\r\n          <Button className=\"btnEdit\" variant=\"dark\" onClick={this.handleCreateShow}>Dodaj</Button>\r\n        </Row>\r\n        <Row>\r\n        <Table striped bordered hover variant='dark' style={{marginTop: '30px'}}>\r\n            <thead>\r\n              <th>Id</th>\r\n              <th>Login</th>\r\n              <th>Hasło</th>\r\n              <th>Rola</th>\r\n              <th>Operacje</th>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((u) => {\r\n                return(\r\n                <tr key={u.id}>\r\n                  <td>{u.id}</td>\r\n                  <td>{u.login}</td>\r\n                  <td>{u.password}</td>\r\n                  <td>{u.userFunction.function}</td>\r\n                  <td>\r\n                    <Button className=\"btnEdit\" variant=\"dark\" onClick={this.editUserData.bind(this, u.id, u.login, u.password, u.userFunctionId, u.userFunction.function, u.loginHistories)}>Edytuj</Button>\r\n                    <Button className=\"btnDelete\" variant=\"dark\" onClick={this.deleteUser.bind(this, u.id)}>Usuń</Button>\r\n                    <Button className=\"btnDelete\" variant=\"dark\" onClick={this.getLoginHistoryByUserId.bind(this, u.id, u.login, u.password, u.userFunctionId, u.userFunction.function, u.loginHistories)}>Historia</Button>\r\n                  </td>\r\n                </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row style={{marginTop: '20px'}}>\r\n          <h3>Historia wszystkich logowań</h3>\r\n        </Row>\r\n        <Row>\r\n          <Button className=\"btnDelete\" variant=\"dark\" style={{width: '130px'}} onClick={this.deleteLoginHistory}>Wyczyść historie</Button>\r\n        </Row>\r\n        <Row>\r\n          <Table striped  bordered hover variant='dark' style={{marginTop: '20px'}}>\r\n            <thead>\r\n              <th>Id logowania</th>\r\n              <th>Godzina</th>\r\n              <th>Id użytkownika</th>\r\n              <th>Login użytkownika</th>\r\n              <th>Podany login</th>\r\n              <th>Podane hasło</th>\r\n              <th>Status operacji</th>\r\n            </thead>\r\n            <tbody>\r\n              {loginHistory.map((l) => {\r\n                return(\r\n                <tr key={l.id}>\r\n                  <td>{l.id}</td>\r\n                  <td>{l.dateTime}</td>\r\n                  <td>{l.userId}</td>\r\n                  <td>{l.users.login}</td>\r\n                  <td>{l.userLogin}</td>\r\n                  <td>{l.userPassword}</td>\r\n                  <td>{l.success}</td>\r\n                </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n\r\n        <Modal show={this.state.showModal} onHide={this.state.handleClose} className=\"myModal\">\r\n        <Modal.Header>\r\n          <Modal.Title>Edycja danych</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Id</Form.Label>\r\n              <Form.Control type=\"text\" disabled defaultValue={this.state.editUserData.id}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Login</Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={this.state.editUserData.login} onChange={this.Login}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Hasło</Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={this.state.editUserData.password} onChange={this.Password}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Rola</Form.Label>\r\n            </Form.Group>\r\n            <Form.Group>\r\n            <select\r\n              className='createSelect'\r\n              defaultValue={this.state.editUserData.userFunctionId}\r\n              onChange={this.UserFunctionId}\r\n              >\r\n                {this.state.userFunctions.map((u) => \r\n                  <option key={u.id} value={u.id}>{u.function}</option>\r\n                )}\r\n                \r\n              </select>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Zamknij\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.editUser}>\r\n            Zatwierdź\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={this.state.showCreateModal}  onHide={this.state.handleCreateClose} className=\"myModal\">\r\n        <Modal.Header>\r\n          <Modal.Title>Dodawanie użytkownika</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Login</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.LoginNew}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Hasło</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.PasswordNew}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Rola</Form.Label>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <select\r\n              className='createSelect'\r\n              onChange={this.UserFunctionIdNew}\r\n              >\r\n                {this.state.userFunctions.map((u) => \r\n                  <option key={u.id} value={u.id}>{u.function}</option>\r\n                )}            \r\n              </select>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCreateClose}>\r\n            Zamknij\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.createUser}>\r\n            Dodaj\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={this.state.showModalHistory} size='lg' onHide={this.state.handleCloseHistory} className=\"historyModal\">\r\n        <Modal.Header>\r\n          <Modal.Title>Historia logowań użytkownika</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n                <Form.Label>Id: {this.state.editUserData.id}</Form.Label>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Login: {this.state.editUserData.login}</Form.Label>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Hasło: {this.state.editUserData.password}</Form.Label>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Rola: {this.state.editUserData.userFunction}</Form.Label>\r\n            </Form.Group>\r\n          </Form>\r\n          <Table responsive=\"lg\" bordered variant='white' style={{marginTop: '30px'}}>\r\n            <thead>\r\n              <th>Id logowania</th>\r\n              <th>Godzina logowania</th>\r\n              <th>Id użytkownika</th>\r\n              <th>Podany login</th>\r\n              <th>Podane hasło</th>\r\n              <th>Status operacji</th>\r\n            </thead>\r\n            <tbody>\r\n            {loginHistoryByUserId.map((l) => {\r\n                return(\r\n                <tr key={l.id}>\r\n                  <td>{l.id}</td>\r\n                  <td>{l.dateTime}</td>\r\n                  <td>{l.userId}</td>\r\n                  <td>{l.userLogin}</td>\r\n                  <td>{l.userPassword}</td>\r\n                  <td>{l.success}</td>\r\n                </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCloseHistory}>\r\n            Zamknij\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n \r\nexport default UsersManagement;","import React, { Component } from \"react\";\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport './Measurement.css';\r\n\r\nclass Server extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"myContainer\">\r\n        <Row>\r\n            <Col>\r\n            Sprawdzenie serwera.\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Server;","import React, { Component } from \"react\";\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './NavApp.css';\r\nclass NavAdmin extends Component\r\n{\r\n    render(){\r\n        return(\r\n                <div className=\"header\">\r\n                <Navbar expand =\"lg\" variant=\"dark\" style={{marginTop: \"30px\"}}>\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavLink exact activeStyle={{ borderBottom: '2px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to= '/Centrum-Historii-Zajezdnia-Web-Page/admin-panel' >Pomiary</NavLink>\r\n                            <NavLink activeStyle={{ borderBottom: '2px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to=\"/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/users-management\">Zarządzaj</NavLink>\r\n                            <NavLink activeStyle={{ borderBottom: '2px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to= '/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/server'>Serwer</NavLink>\r\n                            <NavLink activeStyle={{ borderBottom: '2px solid rgb(152, 52, 239)' }} className=\"Nav-Link\" to= '/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/sensors'>Czujniki</NavLink>\r\n                        </Nav>\r\n                </Navbar>\r\n                </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default NavAdmin;","import React, { Component } from \"react\";\r\nimport {Container, Row, Table, Button, Modal, Form} from 'react-bootstrap';\r\nimport './Measurement.css';\r\nimport './Sensors.css'\r\nimport Img from 'react-image';\r\n\r\nclass Sensors extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            showCreateModal: false,\r\n            sensors: [],\r\n            editSensorData: {\r\n              id: '',\r\n              sensorName: '',\r\n              sensorIpAddress: '',\r\n              externalIpAddress: '',\r\n              top: '',\r\n              left: ''\r\n            },\r\n            createSensorData: {\r\n              sensorName: '',\r\n              sensorIpAddress: '',\r\n              externalIpAddress: '',\r\n              top: '',\r\n              left: ''\r\n            },\r\n            newX: 0,\r\n            newY: 0,\r\n            offsetX: '',\r\n            offsetY: ''\r\n        }\r\n        this.getSensors = this.getSensors.bind(this);\r\n        this.deleteSensors = this.deleteSensors.bind(this);\r\n        this.editSensor = this.editSensor.bind(this);\r\n        this.createSensor = this.createSensor.bind(this);\r\n        this.editSensorData = this.editSensorData.bind(this);\r\n        this.SensorNameNew = this.SensorNameNew.bind(this);\r\n        this.SensorIpAddressNew = this.SensorIpAddressNew.bind(this);\r\n        this.SensorNameEdit = this.SensorNameEdit.bind(this);\r\n        this.SensorIpAddressEdit = this.SensorIpAddressEdit.bind(this);\r\n        this.mouseDownSensor = this.mouseDownSensor.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.SensorLeftEdit = this.SensorLeftEdit.bind(this);\r\n        this.SensorTopEdit = this.SensorTopEdit.bind(this);\r\n        this.SensorLeftNew = this.SensorLeftNew.bind(this);\r\n        this.SensorTopNew = this.SensorTopNew.bind(this);\r\n        this.SensorExternalIpAddressEdit = this.SensorExternalIpAddressEdit.bind(this);\r\n        this.SensorExternalIpAddressNew = this.SensorExternalIpAddressNew.bind(this);\r\n    }\r\n\r\n    editSensorData(id, name, ip, top, left, external)\r\n    {\r\n      this.setState({\r\n        editSensorData: {\r\n          id: id,\r\n          sensorName: name,\r\n          sensorIpAddress: ip,\r\n          top: top,\r\n          left: left,\r\n          externalIpAddress: external\r\n        }\r\n\r\n      });\r\n      console.log(this.state.sensors);\r\n      this.handleShow();\r\n    }\r\n\r\n    SensorExternalIpAddressNew(event){\r\n      this.state.createSensorData.externalIpAddress = event.target.value;\r\n    }\r\n\r\n    SensorExternalIpAddressEdit(event){\r\n      this.state.editSensorData.externalIpAddress = event.target.value;\r\n    }\r\n\r\n    SensorTopNew(event){\r\n      this.state.createSensorData.top = event.target.value;\r\n    }\r\n\r\n    SensorLeftNew(event){\r\n      this.state.createSensorData.left = event.target.value;\r\n    }\r\n\r\n    SensorNameNew(event){\r\n      this.state.createSensorData.sensorName = event.target.value;\r\n    }\r\n\r\n    SensorIpAddressNew(event){\r\n      this.state.createSensorData.sensorIpAddress = event.target.value;\r\n    }\r\n\r\n    SensorNameEdit(event){\r\n      this.state.editSensorData.sensorName = event.target.value;\r\n    }\r\n\r\n    SensorIpAddressEdit(event){\r\n      this.state.editSensorData.sensorIpAddress = event.target.value;\r\n    }\r\n\r\n    SensorTopEdit(event){\r\n      this.state.editSensorData.top = event.target.value;\r\n    }\r\n\r\n    SensorLeftEdit(event){\r\n      this.state.editSensorData.left = event.target.value;\r\n    }\r\n\r\n    async getSensors(){\r\n        const data = await fetch('https://localhost:5001/api/sensors');\r\n        const response = await data.json();\r\n\r\n        this.setState({\r\n            sensors: response\r\n        })\r\n    }\r\n\r\n    async deleteSensors(id){\r\n      fetch('https://localhost:5001/api/sensors/'+id, {\r\n        method: 'delete',\r\n        header: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.getSensors();\r\n      })\r\n    }\r\n\r\n    async editSensor(){  \r\n      console.log(this.state.editSensorData) ;\r\n      fetch('https://localhost:5001/api/sensors/'+this.state.editSensorData.id, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: this.state.editSensorData.id,\r\n          sensorName: this.state.editSensorData.sensorName,\r\n          ipAddress: this.state.editSensorData.sensorIpAddress,\r\n          externalIp: this.state.editSensorData.externalIpAddress,\r\n          top: this.state.editSensorData.top,\r\n          left: this.state.editSensorData.left\r\n        })\r\n      })\r\n      .then(response => {\r\n        this.getSensors();\r\n        this.handleClose();\r\n      })\r\n    }\r\n\r\n    async createSensor(){\r\n      console.log(this.state.createSensorData);\r\n      try{\r\n        fetch('https://localhost:5001/api/sensors', {\r\n          method: 'post',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            sensorName: this.state.createSensorData.sensorName,\r\n            ipAddress: this.state.createSensorData.sensorIpAddress,\r\n            externalIp: this.state.createSensorData.externalIpAddress,\r\n            top: this.state.createSensorData.top,\r\n            left: this.state.createSensorData.left\r\n          })\r\n        })\r\n        .then(response => {\r\n          this.getSensors();\r\n          this.handleCreateClose();\r\n        })\r\n      }\r\n      catch(error){\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    handleCreateShow = () => {\r\n      this.setState({\r\n        showCreateModal: true\r\n      })\r\n    }\r\n  \r\n    handleCreateClose = () => {\r\n      this.setState({\r\n        showCreateModal: false\r\n      })\r\n    }\r\n  \r\n    handleShow = () => {\r\n      this.setState({\r\n        showModal: true\r\n      });\r\n    }\r\n  \r\n    handleClose = () => {\r\n      this.setState({\r\n        showModal: false\r\n      });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getSensors();\r\n    }\r\n\r\n  mouseDownSensor(e){\r\n    const el = e.target;\r\n\r\n    this.state.offsetX=e.clientX-el.getBoundingClientRect().left;\r\n    this.state.offsetY=e.clientY-el.getBoundingClientRect().top;\r\n\r\n    el.addEventListener('mousemove',this.move);\r\n  }\r\n\r\n  move(e){\r\n    const el = e.target;\r\n\r\n    el.style.left = `${e.pageX - this.state.offsetX}px`;\r\n    el.style.top = `${e.pageY - this.state.offsetY}px`;\r\n    this.state.newX = el.style.left;\r\n    this.state.newY = el.style.top;\r\n  }\r\n\r\n  remove(e){\r\n    const el = e.target;\r\n    el.removeEventListener(\"mousemove\", this.move);\r\n\r\n    this.state.newX = parseInt(this.state.newX, 10);\r\n    this.state.newY = parseInt(this.state.newY, 10);\r\n    this.state.sensors.map((s) => {\r\n      if(s.id == el.id){\r\n        this.editSensorData(s.id, s.sensorName, s.ipAddress, this.state.newY, this.state.newX, s.externalIp);\r\n      }\r\n    })\r\n    console.log(this.state.editSensorData);\r\n    \r\n  }\r\n  render() {\r\n      const {sensors} = this.state;\r\n    return (\r\n      <Container className=\"myContainer\">\r\n          <Row>\r\n              <h3>Lista czujników</h3>\r\n          </Row>\r\n\r\n        <Row>\r\n            <Button className=\"btnEdit\" variant=\"dark\" onClick={this.handleCreateShow}>Dodaj</Button>\r\n        </Row>\r\n        <Row>\r\n        <Table striped bordered hover variant='dark' style={{marginTop: '20px'}}>\r\n            <thead>\r\n              <th>Id</th>\r\n              <th>Nazwa</th>\r\n              <th>Adres IP</th>\r\n              <th>Operacje</th>\r\n            </thead>\r\n            <tbody>\r\n              {sensors.map((s) => {\r\n                return(\r\n                <tr key={s.id}>\r\n                  <td>{s.id}</td>\r\n                  <td>{s.sensorName}</td>\r\n                  <td>{s.ipAddress}</td>\r\n                  <td>\r\n                    <Button className=\"btnEdit\" variant=\"dark\" onClick={this.editSensorData.bind(this, s.id, s.sensorName, s.ipAddress, s.top, s.left, s.externalIp)}>Edytuj</Button>\r\n                    <Button className=\"btnDelete\" variant=\"dark\" onClick={this.deleteSensors.bind(this, s.id)} >Usuń</Button>\r\n                  </td>\r\n                </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row>\r\n                <img className=\"mapPicture\"\r\n                src={require(\"./images/map.png\")} />\r\n                {sensors.map((s) => {\r\n                    return(\r\n                      <div className=\"sensorBall\" id={s.id} key={s.id} onMouseDown={this.mouseDownSensor} onMouseUp={this.remove} style={{position: 'absolute', top: s.top, left: s.left}}>{s.id}</div>\r\n                    )\r\n                })}\r\n        </Row>\r\n\r\n        <Modal show={this.state.showModal} onHide={this.state.handleClose} className=\"myModal\">\r\n        <Modal.Header>\r\n          <Modal.Title>Edycja danych</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Id</Form.Label>\r\n              <Form.Control type=\"text\" disabled defaultValue={this.state.editSensorData.id}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Nazwa czujnika</Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={this.state.editSensorData.sensorName} onChange={this.SensorNameEdit}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Adres Ip czujnika</Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={this.state.editSensorData.sensorIpAddress} onChange={this.SensorIpAddressEdit}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Zewnętrzny adres ip</Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={this.state.editSensorData.externalIpAddress} onChange={this.SensorExternalIpAddressEdit}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Top</Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={this.state.editSensorData.top} onChange={this.SensorTopEdit}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Left</Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={this.state.editSensorData.left} onChange={this.SensorLeftEdit}/>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Zamknij\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.editSensor}>\r\n            Zatwierdź\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={this.state.showCreateModal} onHide={this.state.handleCreateClose} className=\"myModal\">\r\n        <Modal.Header>\r\n          <Modal.Title>Dodawanie sensora</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Nazwa czujnika</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.SensorNameNew}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Adres Ip czujnika</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.SensorIpAddressNew}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Zewnętrzny adres ip</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.SensorExternalIpAddressNew}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Top</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.SensorTopNew}/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Left</Form.Label>\r\n              <Form.Control type=\"text\" onChange={this.SensorLeftNew}/>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleCreateClose}>\r\n            Zamknij\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.createSensor}>\r\n            Dodaj\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Sensors;","import React, { Component } from \"react\";\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport './Measurement.css';\r\nimport MeasurementPanel from \"./MeasurementPanel\";\r\nimport UsersManagement from './UsersManagement';\r\nimport Server from './Server';\r\nimport NavAdmin from './NavAdmin';\r\nimport Sensors from './Sensors';\r\n\r\nclass AdminPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Router>\r\n        <Container className=\"myContainer\">\r\n          <Row>\r\n              <Col>\r\n                  <h1>Panel administratora</h1>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <NavAdmin />\r\n            </Col >\r\n          </Row>\r\n        </Container>\r\n        <Switch>\r\n          <Route path='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel' exact component={MeasurementPanel}></Route>\r\n          <Route path='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/users-management' component={UsersManagement}></Route>\r\n          <Route path='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/server' component={Server}></Route>\r\n          <Route path='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel/sensors' component={Sensors}></Route>\r\n        </Switch>\r\n                        \r\n      </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default AdminPanel;","import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport './Measurement.css';\r\nimport MeasurementPanel from './MeasurementPanel';\r\n\r\nclass EmployeePanel extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container className=\"myContainer\">\r\n        <Row>\r\n            <Col>\r\n                <h1>Panel pracownika</h1>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n              <Link to='/Centrum-Historii-Zajezdnia-Web-Page/login'>\r\n                  <Button  className=\"Login-Button2\" variant='primary'>Wyloguj</Button>\r\n              </Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <MeasurementPanel/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default EmployeePanel;","import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Button, Form} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport './Measurement.css';\r\nimport './Technician.css';\r\nimport text from './CodeTemplate.js';\r\n\r\nclass TechnicianPanel extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      generatedCodeData: {\r\n        ipAddress: '',\r\n        mask: '',\r\n        gate: '',\r\n        dns: '',\r\n        networkName: '',\r\n        password: '',\r\n        sensorName: '',\r\n        top: '',\r\n        left: '',\r\n        externalIp: ''\r\n      },\r\n      fileName: 'main.py',\r\n      template: 'xd'\r\n    }\r\n    this.IpAddress = this.IpAddress.bind(this);\r\n    this.Mask = this.Mask.bind(this);\r\n    this.Gate = this.Gate.bind(this);\r\n    this.DNS = this.DNS.bind(this);\r\n    this.NetworkName = this.NetworkName.bind(this);\r\n    this.Top = this.Top.bind(this);\r\n    this.Left = this.Left.bind(this);\r\n    this.ExternalIp = this.ExternalIp.bind(this);\r\n    this.SensorName = this.SensorName.bind(this);\r\n    this.Create = this.Create.bind(this);\r\n    this.createSensor = this.createSensor.bind(this);\r\n    this.clearData = this.clearData.bind(this);\r\n    this.Password = this.Password.bind(this);\r\n  }\r\n\r\n  async createSensor(){\r\n    console.log(this.state.createSensorData);\r\n    try{\r\n      fetch('https://localhost:5001/api/sensors', {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          sensorName: this.state.generatedCodeData.sensorName,\r\n          ipAddress: this.state.generatedCodeData.ipAddress,\r\n          externalIp: this.state.generatedCodeData.externalIp,\r\n          top: this.state.generatedCodeData.top,\r\n          left: this.state.generatedCodeData.left\r\n        })\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n      })\r\n    }\r\n    catch(error){\r\n      console.log(error);\r\n    }\r\n    this.clearData();\r\n  }\r\n\r\n  Create(){\r\n    var timeNow = new Date();\r\n\r\n    let text1 = text;\r\n    text1 = text1.replace('FORMAT_DATY', `${timeNow.getFullYear()},${timeNow.getMonth()+1},${timeNow.getDate()},${timeNow.getHours()},${timeNow.getMinutes()},0,0,0`);\r\n    text1 = text1.replace('IP', this.state.generatedCodeData.ipAddress);\r\n    text1 = text1.replace('MASKA', this.state.generatedCodeData.mask);\r\n    text1 = text1.replace('GATEWAY', this.state.generatedCodeData.gate);\r\n    text1 = text1.replace('DNS', this.state.generatedCodeData.dns);\r\n    text1 = text1.replace('NAZWA SIECI', this.state.generatedCodeData.networkName);\r\n    text1 = text1.replace('HASŁO', this.state.generatedCodeData.password);\r\n    text1 = text1.replace('NAZWA SIECI', this.state.generatedCodeData.networkName);\r\n    text1 = text1.replace('HASŁO', this.state.generatedCodeData.password);\r\n    text1 = text1.replace('NAZWA', this.state.generatedCodeData.sensorName);\r\n\r\n    var element = document.createElement('a');\r\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text1));\r\n    element.setAttribute('download', this.state.fileName);\r\n\r\n    element.style.display = 'none';\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n    this.createSensor();\r\n  }\r\n\r\n  clearData(){\r\n    this.state.generatedCodeData.ipAddress = '';\r\n    this.state.generatedCodeData.mask = '';\r\n    this.state.generatedCodeData.gate = '';\r\n    this.state.generatedCodeData.dns = '';\r\n    this.state.generatedCodeData.networkName = '';\r\n    this.state.generatedCodeData.top = '';\r\n    this.state.generatedCodeData.left = '';\r\n    this.state.generatedCodeData.externalIp = '';\r\n    this.state.generatedCodeData.sensorName = '';\r\n    this.state.generatedCodeData.password = '';\r\n  }\r\n\r\n  IpAddress(event){\r\n    this.state.generatedCodeData.ipAddress = event.target.value;\r\n  }\r\n\r\n  Mask(event){\r\n    this.state.generatedCodeData.mask = event.target.value;\r\n  }\r\n\r\n  Gate(event){\r\n    this.state.generatedCodeData.gate = event.target.value;\r\n  }\r\n\r\n  DNS(event){\r\n    this.state.generatedCodeData.dns = event.target.value;\r\n  }\r\n\r\n  NetworkName(event){\r\n    this.state.generatedCodeData.networkName = event.target.value;\r\n  }\r\n\r\n  Top(event){\r\n    this.state.generatedCodeData.top = event.target.value;\r\n  }\r\n\r\n  Left(event){\r\n    this.state.generatedCodeData.left = event.target.value;\r\n  }\r\n\r\n  ExternalIp(event){\r\n    this.state.generatedCodeData.externalIp = event.target.value;\r\n  }\r\n\r\n  SensorName(event){\r\n    this.state.generatedCodeData.sensorName = event.target.value;\r\n  }\r\n\r\n  Password(event){\r\n    this.state.generatedCodeData.password = event.target.value;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"myContainer\">\r\n        <Row>\r\n            <Col>\r\n                <h1>Panel technika</h1>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n              <Link to='/Centrum-Historii-Zajezdnia-Web-Page/login'>\r\n                  <Button  className=\"Login-Button2\" variant='primary'>Wyloguj</Button>\r\n              </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs='12'>\r\n            <div className=\"technicianTitle\">\r\n              Generowanie kodu i dodanie czujnika\r\n            </div>\r\n          </Col>        \r\n        </Row>\r\n        <Row className=\"technicianInput\">\r\n            <Col>\r\n              <Form style={{}}>\r\n                <Form.Group style={{marginTop: '10px'}}>\r\n                  <Form.Label>Adres Ip</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.IpAddress}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Maska</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.Mask}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Adres bramy</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.Gate}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>DNS</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.DNS}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nazwa sieci</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.NetworkName}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Hasło</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.Password}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Nazwa czujnika</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.SensorName}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Top</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.Top}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Left</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.Left}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Adres ip zewnętrzny</Form.Label>\r\n                  <Form.Control type=\"text\" onChange={this.ExternalIp}/>\r\n                </Form.Group>\r\n                <Button className=\"btnEdit\" variant=\"dark\" style={{marginLeft: '120px', marginTop: '10px',marginBottom: '30px', width: '120px', height: '35px'}} onClick={this.Create}>Generuj</Button>\r\n              </Form>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n \r\nexport default TechnicianPanel;","const text= \"import dht\\n\" + \r\n\"import machine\\n\" +\r\n\"import ujson\\n\" +\r\n\"import time\\n\" +\r\n\"import network\\n\" +\r\n\"import socket\\n\" +\r\n\"\\n\" +\r\n\"machine.RTC().datetime((FORMAT_DATY))\\n\" +\r\n\"\\n\" +\r\n\"with open('logs.txt', 'a') as logs:\\n\" + \r\n    \"\\tlogs.write('Start ' + str(time.localtime()) + \\'\\\\n')\\n\" +\r\n\"\\n\" +\r\n\"sta = network.WLAN(network.STA_IF)\\n\" +\r\n\"sta.active(True)\\n\" +\r\n\"sta.ifconfig(('IP', 'MASKA', 'GATEWAY', 'DNS'))\\n\" +\r\n\"sta.connect('NAZWA SIECI', 'HASŁO')\\n\" +\r\n\"time.sleep(5)\\n\" +\r\n\"\\n\" +\r\n\"with open('logs.txt', 'a') as logs:\\n\" +\r\n    \"\\twhile not sta.isconnected():\\n\" +\r\n        \"\\t\\tlogs.write('Not connected' + str(time.localtime()) + ' ' + str(sta.ifconfig()) + \\'\\\\n')\\n\" +\r\n        \"\\t\\ttime.sleep(10)\\n\" +\r\n        \"\\t\\tta.connect('NAZWA SIECI', 'HASŁO')\\n\" +\r\n    \"\\tlogs.write('Connected' + str(time.localtime()) + ' ' + str(sta.ifconfig()) + \\'\\\\n')\\n\" +\r\n\"\\n\"+\r\n\"addr = socket.getaddrinfo('0.0.0.0', 80)[0][-1]\\n\" +\r\n\"s = socket.socket()\\n\" +\r\n\"s.bind(addr)\\n\" +\r\n\"s.listen(1)\\n\" +\r\n\"\\n\" +\r\n\"data= {}\\n\" +\r\n\"data['name'] = 'NAZWA'\\n\" + \r\n\"d = dht.DHT22(machine.Pin(16))\\n\" +\r\n\"\\n\" +\r\n\"last_measure = time.time()\\n\" +\r\n\"measured = False\\n\" +\r\n\"while not measured:\\n\" +\r\n    \"\\ttry:\\n\" +\r\n        \"\\t\\td.measure()\\n\" +\r\n        \"\\t\\tdata['temperature'] = d.temperature()\\n\" +\r\n        \"\\t\\tdata['humidity'] = d.humidity()\\n\" +\r\n        \"\\t\\tlast_measure = time.time()\\n\" +\r\n        \"measured = True\\n\" +\r\n    \"\\texcept Exception as e:\\n\" +\r\n        \"\\t\\twith open('logs.txt', 'a') as logs:\\n\" +\r\n            \"\\t\\t\\tlogs.write('Start measure error' + str(time.localtime()) + \\'\\\\n')\\n\" +\r\n\"\\n\" +\r\n\"while True:\\n\" +\r\n    \"\\tcl, addr = s.accept()\\n\" +\r\n    \"\\tcl_file = cl.makefile('rwb', 0)\\n\" +\r\n    \"\\twhile True:\\n\" +\r\n        \"\\t\\tline = cl_file.readline()\\n\" +\r\n        \"\\t\\tif not line or line == b'\\\\r\\\\n':\\n\" +\r\n            \"\\t\\t\\tbreak\\n\" +\r\n    \"\\twith open('logs.txt', 'a') as file:\\n\" +\r\n        \"\\t\\tfile.write('Connection from ' + str(addr) + \\'\\\\n')\\n\" +\r\n    \"\\tif time.time() - last_measure > 120:\\n\" +\r\n        \"\\t\\ttry:\\n\" +\r\n            \"\\t\\t\\td.measure()\\n\" +\r\n            \"\\t\\t\\tdata['temperature'] = d.temperature()\\n\" +\r\n            \"\\t\\t\\tdata['humidity'] = d.humidity()\\n\" +\r\n            \"\\t\\t\\tlast_measure = time.time()\\n\" +\r\n            \"\\t\\t\\tcl.send('HTTP/1.1 200 OK\\\\r\\\\nContent-type: application/json\\\\r\\\\n\\\\r\\\\n')\\n\" +\r\n            \"\\t\\t\\tcl.send(ujson.dumps(data))\\n\" +\r\n        \"\\t\\texcept Exception as e:\\n\" +\r\n            \"\\t\\t\\twith open('logs.txt', 'a') as logs:\\n\" +\r\n                \"\\t\\t\\t\\tlogs.write('Start mesure error' + str(time.localtime()) + \\'\\\\n')\\n\" +\r\n            \"\\t\\t\\tcl.send('HTTP/1.1 500 Internal Server Error\\\\r\\\\nContent-type: application/json\\\\r\\\\n\\\\r\\\\n')\\n\" +\r\n            \"\\t\\t\\tcl.send(ujson.dumps({'Error': 'Measure Error', 'Time': str(time.localtime())}))\\n\" +\r\n    \"\\telse :\\n\" +\r\n        \"\\t\\tcl.send('HTTP/1.1 200 OK\\\\r\\\\nContent-type: application/json\\\\r\\\\n\\\\r\\\\n')\\n\" +\r\n        \"\\t\\tcl.send(ujson.dumps(data))\\n\" +\r\n    \"\\tcl.close()\\n\" ;\r\n\r\nexport default text;","import React, { Component } from \"react\";\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport NavApp from './NavApp';\r\nimport Login from './Login';\r\nimport AdminMainPanel from \"./AdminMainPanel\";\r\nimport EmployeePanel from \"./EmployeePanel\";\r\nimport TechnicianPanel from './TechnicianPanel';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nclass App extends Component\r\n{\r\n    render(){\r\n        return(\r\n                <Router>\r\n                        <NavApp />\r\n                        <Switch>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/' exact component={Home}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/about' component={About}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/contact' component={Contact}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/login' component={Login}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/admin-panel' component={AdminMainPanel}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/employeepanel' component={EmployeePanel}></Route>\r\n                            <Route path='/Centrum-Historii-Zajezdnia-Web-Page/technicianpanel' component={TechnicianPanel}></Route>\r\n                        </Switch>\r\n                        \r\n                </Router>\r\n          );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App';\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <App/> ,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}